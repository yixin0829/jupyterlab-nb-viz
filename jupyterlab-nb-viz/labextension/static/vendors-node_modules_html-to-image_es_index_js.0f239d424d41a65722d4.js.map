{"version":3,"file":"vendors-node_modules_html-to-image_es_index_js.0f239d424d41a65722d4.js","mappings":"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","sources":["webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/apply-style.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/clone-node.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/clone-pseudos.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/dataurl.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/embed-images.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/embed-resources.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/embed-webfonts.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/index.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/mimes.ts","webpack://jupyterlab-nb-viz/./node_modules/html-to-image/src/util.ts"],"sourcesContent":["import { Options } from './types'\n\nexport function applyStyle<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): T {\n  const { style } = node\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`\n  }\n\n  const manual = options.style\n  if (manual != null) {\n    Object.keys(manual).forEach((key: any) => {\n      style[key] = manual[key] as string\n    })\n  }\n\n  return node\n}\n","import type { Options } from './types'\nimport { clonePseudoElements } from './clone-pseudos'\nimport { createImage, toArray, isInstanceOfElement } from './util'\nimport { getMimeType } from './mimes'\nimport { resourceToDataURL } from './dataurl'\n\nasync function cloneCanvasElement(canvas: HTMLCanvasElement) {\n  const dataURL = canvas.toDataURL()\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false) as HTMLCanvasElement\n  }\n  return createImage(dataURL)\n}\n\nasync function cloneVideoElement(video: HTMLVideoElement, options: Options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    canvas.width = video.clientWidth\n    canvas.height = video.clientHeight\n    ctx?.drawImage(video, 0, 0, canvas.width, canvas.height)\n    const dataURL = canvas.toDataURL()\n    return createImage(dataURL)\n  }\n\n  const poster = video.poster\n  const contentType = getMimeType(poster)\n  const dataURL = await resourceToDataURL(poster, contentType, options)\n  return createImage(dataURL)\n}\n\nasync function cloneIFrameElement(iframe: HTMLIFrameElement) {\n  try {\n    if (iframe?.contentDocument?.body) {\n      return (await cloneNode(\n        iframe.contentDocument.body,\n        {},\n        true,\n      )) as HTMLBodyElement\n    }\n  } catch {\n    // Failed to clone iframe\n  }\n\n  return iframe.cloneNode(false) as HTMLIFrameElement\n}\n\nasync function cloneSingleNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<HTMLElement> {\n  if (isInstanceOfElement(node, HTMLCanvasElement)) {\n    return cloneCanvasElement(node)\n  }\n\n  if (isInstanceOfElement(node, HTMLVideoElement)) {\n    return cloneVideoElement(node, options)\n  }\n\n  if (isInstanceOfElement(node, HTMLIFrameElement)) {\n    return cloneIFrameElement(node)\n  }\n\n  return node.cloneNode(false) as T\n}\n\nconst isSlotElement = (node: HTMLElement): node is HTMLSlotElement =>\n  node.tagName != null && node.tagName.toUpperCase() === 'SLOT'\n\nasync function cloneChildren<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  options: Options,\n): Promise<T> {\n  let children: T[] = []\n\n  if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n    children = toArray<T>(nativeNode.assignedNodes())\n  } else if (\n    isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n    nativeNode.contentDocument?.body\n  ) {\n    children = toArray<T>(nativeNode.contentDocument.body.childNodes)\n  } else {\n    children = toArray<T>((nativeNode.shadowRoot ?? nativeNode).childNodes)\n  }\n\n  if (\n    children.length === 0 ||\n    isInstanceOfElement(nativeNode, HTMLVideoElement)\n  ) {\n    return clonedNode\n  }\n\n  await children.reduce(\n    (deferred, child) =>\n      deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild: HTMLElement | null) => {\n          if (clonedChild) {\n            clonedNode.appendChild(clonedChild)\n          }\n        }),\n    Promise.resolve(),\n  )\n\n  return clonedNode\n}\n\nfunction cloneCSSStyle<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  const targetStyle = clonedNode.style\n  if (!targetStyle) {\n    return\n  }\n\n  const sourceStyle = window.getComputedStyle(nativeNode)\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText\n    targetStyle.transformOrigin = sourceStyle.transformOrigin\n  } else {\n    toArray<string>(sourceStyle).forEach((name) => {\n      let value = sourceStyle.getPropertyValue(name)\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont =\n          Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1\n        value = `${reducedFont}px`\n      }\n\n      if (\n        isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        name === 'display' &&\n        value === 'inline'\n      ) {\n        value = 'block'\n      }\n      \n      if (name === 'd' && clonedNode.getAttribute('d')) {\n        value = `path(${clonedNode.getAttribute('d')})`\n      }\n      \n      targetStyle.setProperty(\n        name,\n        value,\n        sourceStyle.getPropertyPriority(name),\n      )\n    })\n  }\n}\n\nfunction cloneInputValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n    clonedNode.innerHTML = nativeNode.value\n  }\n\n  if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n    clonedNode.setAttribute('value', nativeNode.value)\n  }\n}\n\nfunction cloneSelectValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n    const clonedSelect = clonedNode as any as HTMLSelectElement\n    const selectedOption = Array.from(clonedSelect.children).find(\n      (child) => nativeNode.value === child.getAttribute('value'),\n    )\n\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '')\n    }\n  }\n}\n\nfunction decorate<T extends HTMLElement>(nativeNode: T, clonedNode: T): T {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    cloneCSSStyle(nativeNode, clonedNode)\n    clonePseudoElements(nativeNode, clonedNode)\n    cloneInputValue(nativeNode, clonedNode)\n    cloneSelectValue(nativeNode, clonedNode)\n  }\n\n  return clonedNode\n}\n\nasync function ensureSVGSymbols<T extends HTMLElement>(\n  clone: T,\n  options: Options,\n) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : []\n  if (uses.length === 0) {\n    return clone\n  }\n\n  const processedDefs: { [key: string]: HTMLElement } = {}\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i]\n    const id = use.getAttribute('xlink:href')\n    if (id) {\n      const exist = clone.querySelector(id)\n      const definition = document.querySelector(id) as HTMLElement\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = (await cloneNode(definition, options, true))!\n      }\n    }\n  }\n\n  const nodes = Object.values(processedDefs)\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml'\n    const svg = document.createElementNS(ns, 'svg')\n    svg.setAttribute('xmlns', ns)\n    svg.style.position = 'absolute'\n    svg.style.width = '0'\n    svg.style.height = '0'\n    svg.style.overflow = 'hidden'\n    svg.style.display = 'none'\n\n    const defs = document.createElementNS(ns, 'defs')\n    svg.appendChild(defs)\n\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i])\n    }\n\n    clone.appendChild(svg)\n  }\n\n  return clone\n}\n\nexport async function cloneNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n  isRoot?: boolean,\n): Promise<T | null> {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null\n  }\n\n  return Promise.resolve(node)\n    .then((clonedNode) => cloneSingleNode(clonedNode, options) as Promise<T>)\n    .then((clonedNode) => cloneChildren(node, clonedNode, options))\n    .then((clonedNode) => decorate(node, clonedNode))\n    .then((clonedNode) => ensureSVGSymbols(clonedNode, options))\n}\n","import { uuid, toArray } from './util'\n\ntype Pseudo = ':before' | ':after'\n\nfunction formatCSSText(style: CSSStyleDeclaration) {\n  const content = style.getPropertyValue('content')\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration) {\n  return toArray<string>(style)\n    .map((name) => {\n      const value = style.getPropertyValue(name)\n      const priority = style.getPropertyPriority(name)\n\n      return `${name}: ${value}${priority ? ' !important' : ''};`\n    })\n    .join(' ')\n}\n\nfunction getPseudoElementStyle(\n  className: string,\n  pseudo: Pseudo,\n  style: CSSStyleDeclaration,\n): Text {\n  const selector = `.${className}:${pseudo}`\n  const cssText = style.cssText\n    ? formatCSSText(style)\n    : formatCSSProperties(style)\n\n  return document.createTextNode(`${selector}{${cssText}}`)\n}\n\nfunction clonePseudoElement<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  pseudo: Pseudo,\n) {\n  const style = window.getComputedStyle(nativeNode, pseudo)\n  const content = style.getPropertyValue('content')\n  if (content === '' || content === 'none') {\n    return\n  }\n\n  const className = uuid()\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`\n  } catch (err) {\n    return\n  }\n\n  const styleElement = document.createElement('style')\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style))\n  clonedNode.appendChild(styleElement)\n}\n\nexport function clonePseudoElements<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n) {\n  clonePseudoElement(nativeNode, clonedNode, ':before')\n  clonePseudoElement(nativeNode, clonedNode, ':after')\n}\n","import { Options } from './types'\n\nfunction getContentFromDataUrl(dataURL: string) {\n  return dataURL.split(/,/)[1]\n}\n\nexport function isDataUrl(url: string) {\n  return url.search(/^(data:)/) !== -1\n}\n\nexport function makeDataUrl(content: string, mimeType: string) {\n  return `data:${mimeType};base64,${content}`\n}\n\nexport async function fetchAsDataURL<T>(\n  url: string,\n  init: RequestInit | undefined,\n  process: (data: { result: string; res: Response }) => T,\n): Promise<T> {\n  const res = await fetch(url, init)\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`)\n  }\n  const blob = await res.blob()\n  return new Promise<T>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onerror = reject\n    reader.onloadend = () => {\n      try {\n        resolve(process({ res, result: reader.result as string }))\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    reader.readAsDataURL(blob)\n  })\n}\n\nconst cache: { [url: string]: string } = {}\n\nfunction getCacheKey(\n  url: string,\n  contentType: string | undefined,\n  includeQueryParams: boolean | undefined,\n) {\n  let key = url.replace(/\\?.*/, '')\n\n  if (includeQueryParams) {\n    key = url\n  }\n\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '')\n  }\n\n  return contentType ? `[${contentType}]${key}` : key\n}\n\nexport async function resourceToDataURL(\n  resourceUrl: string,\n  contentType: string | undefined,\n  options: Options,\n) {\n  const cacheKey = getCacheKey(\n    resourceUrl,\n    contentType,\n    options.includeQueryParams,\n  )\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey]\n  }\n\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\n  }\n\n  let dataURL: string\n  try {\n    const content = await fetchAsDataURL(\n      resourceUrl,\n      options.fetchRequestInit,\n      ({ res, result }) => {\n        if (!contentType) {\n          // eslint-disable-next-line no-param-reassign\n          contentType = res.headers.get('Content-Type') || ''\n        }\n        return getContentFromDataUrl(result)\n      },\n    )\n    dataURL = makeDataUrl(content, contentType!)\n  } catch (error) {\n    dataURL = options.imagePlaceholder || ''\n\n    let msg = `Failed to fetch resource: ${resourceUrl}`\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message\n    }\n\n    if (msg) {\n      console.warn(msg)\n    }\n  }\n\n  cache[cacheKey] = dataURL\n  return dataURL\n}\n","import { Options } from './types'\nimport { embedResources } from './embed-resources'\nimport { toArray, isInstanceOfElement } from './util'\nimport { isDataUrl, resourceToDataURL } from './dataurl'\nimport { getMimeType } from './mimes'\n\nasync function embedProp(\n  propName: string,\n  node: HTMLElement,\n  options: Options,\n) {\n  const propValue = node.style?.getPropertyValue(propName)\n  if (propValue) {\n    const cssString = await embedResources(propValue, null, options)\n    node.style.setProperty(\n      propName,\n      cssString,\n      node.style.getPropertyPriority(propName),\n    )\n    return true\n  }\n  return false\n}\n\nasync function embedBackground<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (!(await embedProp('background', clonedNode, options))) {\n    await embedProp('background-image', clonedNode, options)\n  }\n  if (!(await embedProp('mask', clonedNode, options))) {\n    await embedProp('mask-image', clonedNode, options)\n  }\n}\n\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\n\n  if (\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\n    !(\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\n      !isDataUrl(clonedNode.href.baseVal)\n    )\n  ) {\n    return\n  }\n\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\n\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\n  await new Promise((resolve, reject) => {\n    clonedNode.onload = resolve\n    clonedNode.onerror = reject\n\n    const image = clonedNode as HTMLImageElement\n    if (image.decode) {\n      image.decode = resolve as any\n    }\n\n    if (image.loading === 'lazy') {\n      image.loading = 'eager'\n    }\n\n    if (isImageElement) {\n      clonedNode.srcset = ''\n      clonedNode.src = dataURL\n    } else {\n      clonedNode.href.baseVal = dataURL\n    }\n  })\n}\n\nasync function embedChildren<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\n  const deferreds = children.map((child) => embedImages(child, options))\n  await Promise.all(deferreds).then(() => clonedNode)\n}\n\nexport async function embedImages<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    await embedBackground(clonedNode, options)\n    await embedImageNode(clonedNode, options)\n    await embedChildren(clonedNode, options)\n  }\n}\n","import { Options } from './types'\nimport { resolveUrl } from './util'\nimport { getMimeType } from './mimes'\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl'\n\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g\n\nfunction toRegex(url: string): RegExp {\n  // eslint-disable-next-line no-useless-escape\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g')\n}\n\nexport function parseURLs(cssText: string): string[] {\n  const urls: string[] = []\n\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\n    urls.push(url)\n    return raw\n  })\n\n  return urls.filter((url) => !isDataUrl(url))\n}\n\nexport async function embed(\n  cssText: string,\n  resourceURL: string,\n  baseURL: string | null,\n  options: Options,\n  getContentFromUrl?: (url: string) => Promise<string>,\n): Promise<string> {\n  try {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL\n    const contentType = getMimeType(resourceURL)\n    let dataURL: string\n    if (getContentFromUrl) {\n      const content = await getContentFromUrl(resolvedURL)\n      dataURL = makeDataUrl(content, contentType)\n    } else {\n      dataURL = await resourceToDataURL(resolvedURL, contentType, options)\n    }\n    return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)\n  } catch (error) {\n    // pass\n  }\n  return cssText\n}\n\nfunction filterPreferredFontFormat(\n  str: string,\n  { preferredFontFormat }: Options,\n): string {\n  return !preferredFontFormat\n    ? str\n    : str.replace(FONT_SRC_REGEX, (match: string) => {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || []\n          if (!format) {\n            return ''\n          }\n\n          if (format === preferredFontFormat) {\n            return `src: ${src};`\n          }\n        }\n      })\n}\n\nexport function shouldEmbed(url: string): boolean {\n  return url.search(URL_REGEX) !== -1\n}\n\nexport async function embedResources(\n  cssText: string,\n  baseUrl: string | null,\n  options: Options,\n): Promise<string> {\n  if (!shouldEmbed(cssText)) {\n    return cssText\n  }\n\n  const filteredCSSText = filterPreferredFontFormat(cssText, options)\n  const urls = parseURLs(filteredCSSText)\n  return urls.reduce(\n    (deferred, url) =>\n      deferred.then((css) => embed(css, url, baseUrl, options)),\n    Promise.resolve(filteredCSSText),\n  )\n}\n","import type { Options } from './types'\nimport { toArray } from './util'\nimport { fetchAsDataURL } from './dataurl'\nimport { shouldEmbed, embedResources } from './embed-resources'\n\ninterface Metadata {\n  url: string\n  cssText: string\n}\n\nconst cssFetchCache: { [href: string]: Metadata } = {}\n\nasync function fetchCSS(url: string) {\n  let cache = cssFetchCache[url]\n  if (cache != null) {\n    return cache\n  }\n\n  const res = await fetch(url)\n  const cssText = await res.text()\n  cache = { url, cssText }\n\n  cssFetchCache[url] = cache\n\n  return cache\n}\n\nasync function embedFonts(data: Metadata, options: Options): Promise<string> {\n  let cssText = data.cssText\n  const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g\n  const fontLocs = cssText.match(/url\\([^)]+\\)/g) || []\n  const loadFonts = fontLocs.map(async (loc: string) => {\n    let url = loc.replace(regexUrl, '$1')\n    if (!url.startsWith('https://')) {\n      url = new URL(url, data.url).href\n    }\n\n    return fetchAsDataURL<[string, string]>(\n      url,\n      options.fetchRequestInit,\n      ({ result }) => {\n        cssText = cssText.replace(loc, `url(${result})`)\n        return [loc, result]\n      },\n    )\n  })\n\n  return Promise.all(loadFonts).then(() => cssText)\n}\n\nfunction parseCSS(source: string) {\n  if (source == null) {\n    return []\n  }\n\n  const result: string[] = []\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi\n  // strip out comments\n  let cssText = source.replace(commentsRegex, '')\n\n  // eslint-disable-next-line prefer-regex-literals\n  const keyframesRegex = new RegExp(\n    '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})',\n    'gi',\n  )\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const matches = keyframesRegex.exec(cssText)\n    if (matches === null) {\n      break\n    }\n    result.push(matches[0])\n  }\n  cssText = cssText.replace(keyframesRegex, '')\n\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi\n  // to match css & media queries together\n  const combinedCSSRegex =\n    '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n    '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'\n  // unified regex\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi')\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let matches = importRegex.exec(cssText)\n    if (matches === null) {\n      matches = unifiedRegex.exec(cssText)\n      if (matches === null) {\n        break\n      } else {\n        importRegex.lastIndex = unifiedRegex.lastIndex\n      }\n    } else {\n      unifiedRegex.lastIndex = importRegex.lastIndex\n    }\n    result.push(matches[0])\n  }\n\n  return result\n}\n\nasync function getCSSRules(\n  styleSheets: CSSStyleSheet[],\n  options: Options,\n): Promise<CSSStyleRule[]> {\n  const ret: CSSStyleRule[] = []\n  const deferreds: Promise<number | void>[] = []\n\n  // First loop inlines imports\n  styleSheets.forEach((sheet) => {\n    if ('cssRules' in sheet) {\n      try {\n        toArray<CSSRule>(sheet.cssRules || []).forEach((item, index) => {\n          if (item.type === CSSRule.IMPORT_RULE) {\n            let importIndex = index + 1\n            const url = (item as CSSImportRule).href\n            const deferred = fetchCSS(url)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  try {\n                    sheet.insertRule(\n                      rule,\n                      rule.startsWith('@import')\n                        ? (importIndex += 1)\n                        : sheet.cssRules.length,\n                    )\n                  } catch (error) {\n                    console.error('Error inserting rule from remote css', {\n                      rule,\n                      error,\n                    })\n                  }\n                }),\n              )\n              .catch((e) => {\n                console.error('Error loading remote css', e.toString())\n              })\n\n            deferreds.push(deferred)\n          }\n        })\n      } catch (e) {\n        const inline =\n          styleSheets.find((a) => a.href == null) || document.styleSheets[0]\n        if (sheet.href != null) {\n          deferreds.push(\n            fetchCSS(sheet.href)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  inline.insertRule(rule, sheet.cssRules.length)\n                }),\n              )\n              .catch((err: unknown) => {\n                console.error('Error loading remote stylesheet', err)\n              }),\n          )\n        }\n        console.error('Error inlining remote css file', e)\n      }\n    }\n  })\n\n  return Promise.all(deferreds).then(() => {\n    // Second loop parses rules\n    styleSheets.forEach((sheet) => {\n      if ('cssRules' in sheet) {\n        try {\n          toArray<CSSStyleRule>(sheet.cssRules || []).forEach((item) => {\n            ret.push(item)\n          })\n        } catch (e) {\n          console.error(`Error while reading CSS rules from ${sheet.href}`, e)\n        }\n      }\n    })\n\n    return ret\n  })\n}\n\nfunction getWebFontRules(cssRules: CSSStyleRule[]): CSSStyleRule[] {\n  return cssRules\n    .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n    .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')))\n}\n\nasync function parseWebFontRules<T extends HTMLElement>(\n  node: T,\n  options: Options,\n) {\n  if (node.ownerDocument == null) {\n    throw new Error('Provided element is not within a Document')\n  }\n\n  const styleSheets = toArray<CSSStyleSheet>(node.ownerDocument.styleSheets)\n  const cssRules = await getCSSRules(styleSheets, options)\n\n  return getWebFontRules(cssRules)\n}\n\nexport async function getWebFontCSS<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<string> {\n  const rules = await parseWebFontRules(node, options)\n  const cssTexts = await Promise.all(\n    rules.map((rule) => {\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null\n      return embedResources(rule.cssText, baseUrl, options)\n    }),\n  )\n\n  return cssTexts.join('\\n')\n}\n\nexport async function embedWebFonts<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const cssText =\n    options.fontEmbedCSS != null\n      ? options.fontEmbedCSS\n      : options.skipFonts\n      ? null\n      : await getWebFontCSS(clonedNode, options)\n\n  if (cssText) {\n    const styleNode = document.createElement('style')\n    const sytleContent = document.createTextNode(cssText)\n\n    styleNode.appendChild(sytleContent)\n\n    if (clonedNode.firstChild) {\n      clonedNode.insertBefore(styleNode, clonedNode.firstChild)\n    } else {\n      clonedNode.appendChild(styleNode)\n    }\n  }\n}\n","import { Options } from './types'\nimport { cloneNode } from './clone-node'\nimport { embedImages } from './embed-images'\nimport { applyStyle } from './apply-style'\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts'\nimport {\n  getImageSize,\n  getPixelRatio,\n  createImage,\n  canvasToBlob,\n  nodeToDataURL,\n  checkCanvasDimensions,\n} from './util'\n\nexport async function toSvg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const { width, height } = getImageSize(node, options)\n  const clonedNode = (await cloneNode(node, options, true)) as HTMLElement\n  await embedWebFonts(clonedNode, options)\n  await embedImages(clonedNode, options)\n  applyStyle(clonedNode, options)\n  const datauri = await nodeToDataURL(clonedNode, width, height)\n  return datauri\n}\n\nexport async function toCanvas<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<HTMLCanvasElement> {\n  const { width, height } = getImageSize(node, options)\n  const svg = await toSvg(node, options)\n  const img = await createImage(svg)\n\n  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')!\n  const ratio = options.pixelRatio || getPixelRatio()\n  const canvasWidth = options.canvasWidth || width\n  const canvasHeight = options.canvasHeight || height\n\n  canvas.width = canvasWidth * ratio\n  canvas.height = canvasHeight * ratio\n\n  if (!options.skipAutoScale) {\n    checkCanvasDimensions(canvas)\n  }\n  canvas.style.width = `${canvasWidth}`\n  canvas.style.height = `${canvasHeight}`\n\n  if (options.backgroundColor) {\n    context.fillStyle = options.backgroundColor\n    context.fillRect(0, 0, canvas.width, canvas.height)\n  }\n\n  context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n  return canvas\n}\n\nexport async function toPixelData<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Uint8ClampedArray> {\n  const { width, height } = getImageSize(node, options)\n  const canvas = await toCanvas(node, options)\n  const ctx = canvas.getContext('2d')!\n  return ctx.getImageData(0, 0, width, height).data\n}\n\nexport async function toPng<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL()\n}\n\nexport async function toJpeg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL('image/jpeg', options.quality || 1)\n}\n\nexport async function toBlob<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Blob | null> {\n  const canvas = await toCanvas(node, options)\n  const blob = await canvasToBlob(canvas)\n  return blob\n}\n\nexport async function getFontEmbedCSS<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  return getWebFontCSS(node, options)\n}\n","const WOFF = 'application/font-woff'\nconst JPEG = 'image/jpeg'\nconst mimes: { [key: string]: string } = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml',\n  webp: 'image/webp',\n}\n\nfunction getExtension(url: string): string {\n  const match = /\\.([^./]*?)$/g.exec(url)\n  return match ? match[1] : ''\n}\n\nexport function getMimeType(url: string): string {\n  const extension = getExtension(url).toLowerCase()\n  return mimes[extension] || ''\n}\n","import type { Options } from './types'\n\nexport function resolveUrl(url: string, baseUrl: string | null): string {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url\n  }\n\n  // url is absolute already, without protocol\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url\n  }\n\n  // dataURI, mailto:, tel:, etc.\n  if (url.match(/^[a-z]+:/i)) {\n    return url\n  }\n\n  const doc = document.implementation.createHTMLDocument()\n  const base = doc.createElement('base')\n  const a = doc.createElement('a')\n\n  doc.head.appendChild(base)\n  doc.body.appendChild(a)\n\n  if (baseUrl) {\n    base.href = baseUrl\n  }\n\n  a.href = url\n\n  return a.href\n}\n\nexport const uuid = (() => {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0\n\n  // ref: http://stackoverflow.com/a/6248722/2519373\n  const random = () =>\n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4)\n\n  return () => {\n    counter += 1\n    return `u${random()}${counter}`\n  }\n})()\n\nexport function delay<T>(ms: number) {\n  return (args: T) =>\n    new Promise<T>((resolve) => {\n      setTimeout(() => resolve(args), ms)\n    })\n}\n\nexport function toArray<T>(arrayLike: any): T[] {\n  const arr: T[] = []\n\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\n    arr.push(arrayLike[i])\n  }\n\n  return arr\n}\n\nfunction px(node: HTMLElement, styleProperty: string) {\n  const win = node.ownerDocument.defaultView || window\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty)\n  return val ? parseFloat(val.replace('px', '')) : 0\n}\n\nfunction getNodeWidth(node: HTMLElement) {\n  const leftBorder = px(node, 'border-left-width')\n  const rightBorder = px(node, 'border-right-width')\n  return node.clientWidth + leftBorder + rightBorder\n}\n\nfunction getNodeHeight(node: HTMLElement) {\n  const topBorder = px(node, 'border-top-width')\n  const bottomBorder = px(node, 'border-bottom-width')\n  return node.clientHeight + topBorder + bottomBorder\n}\n\nexport function getImageSize(targetNode: HTMLElement, options: Options = {}) {\n  const width = options.width || getNodeWidth(targetNode)\n  const height = options.height || getNodeHeight(targetNode)\n\n  return { width, height }\n}\n\nexport function getPixelRatio() {\n  let ratio\n\n  let FINAL_PROCESS\n  try {\n    FINAL_PROCESS = process\n  } catch (e) {\n    // pass\n  }\n\n  const val =\n    FINAL_PROCESS && FINAL_PROCESS.env\n      ? FINAL_PROCESS.env.devicePixelRatio\n      : null\n  if (val) {\n    ratio = parseInt(val, 10)\n    if (Number.isNaN(ratio)) {\n      ratio = 1\n    }\n  }\n  return ratio || window.devicePixelRatio || 1\n}\n\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384\n\nexport function checkCanvasDimensions(canvas: HTMLCanvasElement) {\n  if (\n    canvas.width > canvasDimensionLimit ||\n    canvas.height > canvasDimensionLimit\n  ) {\n    if (\n      canvas.width > canvasDimensionLimit &&\n      canvas.height > canvasDimensionLimit\n    ) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= canvasDimensionLimit / canvas.width\n        canvas.width = canvasDimensionLimit\n      } else {\n        canvas.width *= canvasDimensionLimit / canvas.height\n        canvas.height = canvasDimensionLimit\n      }\n    } else if (canvas.width > canvasDimensionLimit) {\n      canvas.height *= canvasDimensionLimit / canvas.width\n      canvas.width = canvasDimensionLimit\n    } else {\n      canvas.width *= canvasDimensionLimit / canvas.height\n      canvas.height = canvasDimensionLimit\n    }\n  }\n}\n\nexport function canvasToBlob(\n  canvas: HTMLCanvasElement,\n  options: Options = {},\n): Promise<Blob | null> {\n  if (canvas.toBlob) {\n    return new Promise((resolve) => {\n      canvas.toBlob(\n        resolve,\n        options.type ? options.type : 'image/png',\n        options.quality ? options.quality : 1,\n      )\n    })\n  }\n\n  return new Promise((resolve) => {\n    const binaryString = window.atob(\n      canvas\n        .toDataURL(\n          options.type ? options.type : undefined,\n          options.quality ? options.quality : undefined,\n        )\n        .split(',')[1],\n    )\n    const len = binaryString.length\n    const binaryArray = new Uint8Array(len)\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i)\n    }\n\n    resolve(\n      new Blob([binaryArray], {\n        type: options.type ? options.type : 'image/png',\n      }),\n    )\n  })\n}\n\nexport function createImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.decode = () => resolve(img) as any\n    img.onload = () => resolve(img)\n    img.onerror = reject\n    img.crossOrigin = 'anonymous'\n    img.decoding = 'async'\n    img.src = url\n  })\n}\n\nexport async function svgToDataURL(svg: SVGElement): Promise<string> {\n  return Promise.resolve()\n    .then(() => new XMLSerializer().serializeToString(svg))\n    .then(encodeURIComponent)\n    .then((html) => `data:image/svg+xml;charset=utf-8,${html}`)\n}\n\nexport async function nodeToDataURL(\n  node: HTMLElement,\n  width: number,\n  height: number,\n): Promise<string> {\n  const xmlns = 'http://www.w3.org/2000/svg'\n  const svg = document.createElementNS(xmlns, 'svg')\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject')\n\n  svg.setAttribute('width', `${width}`)\n  svg.setAttribute('height', `${height}`)\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n\n  foreignObject.setAttribute('width', '100%')\n  foreignObject.setAttribute('height', '100%')\n  foreignObject.setAttribute('x', '0')\n  foreignObject.setAttribute('y', '0')\n  foreignObject.setAttribute('externalResourcesRequired', 'true')\n\n  svg.appendChild(foreignObject)\n  foreignObject.appendChild(node)\n  return svgToDataURL(svg)\n}\n\nexport const isInstanceOfElement = <\n  T extends typeof Element | typeof HTMLElement | typeof SVGImageElement,\n>(\n  node: Element | HTMLElement | SVGImageElement,\n  instance: T,\n): node is T['prototype'] => {\n  if (node instanceof instance) return true\n\n  const nodePrototype = Object.getPrototypeOf(node)\n\n  if (nodePrototype === null) return false\n\n  return (\n    nodePrototype.constructor.name === instance.name ||\n    isInstanceOfElement(nodePrototype, instance)\n  )\n}\n"],"names":[],"sourceRoot":""}