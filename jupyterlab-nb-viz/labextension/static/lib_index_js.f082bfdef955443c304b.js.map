{"version":3,"file":"lib_index_js.f082bfdef955443c304b.js","mappings":"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","sources":["webpack://jupyterlab-nb-viz/./style/node.css","webpack://jupyterlab-nb-viz/./src/DownloadButton.tsx","webpack://jupyterlab-nb-viz/./src/InsightNode.tsx","webpack://jupyterlab-nb-viz/./src/KnowledgeGraph.tsx","webpack://jupyterlab-nb-viz/./src/Legend.tsx","webpack://jupyterlab-nb-viz/./src/PlotNode.tsx","webpack://jupyterlab-nb-viz/./src/RawNode.tsx","webpack://jupyterlab-nb-viz/./src/ReactFlow.tsx","webpack://jupyterlab-nb-viz/./src/RecommendEdge.tsx","webpack://jupyterlab-nb-viz/./src/RecommendationCodeSnippets.tsx","webpack://jupyterlab-nb-viz/./src/TreeUtils.ts","webpack://jupyterlab-nb-viz/./src/index.ts","webpack://jupyterlab-nb-viz/./src/panel.ts","webpack://jupyterlab-nb-viz/./src/registry.ts","webpack://jupyterlab-nb-viz/./style/node.css?bad9"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".react-flow__node-insight {\\n    font-size: 8px;\\n    background: #a2d2bc;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    width: auto;\\n    height: auto;\\n    text-align: left;\\n    max-width: \\\"130px\\\";\\n    padding: 5px;\\n}\\n\\n.react-flow__node-plot {\\n    font-size: 10px;\\n    color: 'white';\\n    background: #9ab75e;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    width: 130px;\\n    height: auto;\\n    text-align: center;\\n    padding: 5px;\\n}\\n\\ndiv.CodeMirror-linebackground.jp-InputArea-editor-dependencyline {\\n    background-color: #f0c633;\\n  }\\n\\n  .react-flow__node-raw {\\n    font-size: 10px;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    max-width: \\\"130px\\\";\\n    padding: 5px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/node.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,cAAc;IACd,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,yBAAyB;EAC3B;;EAEA;IACE,eAAe;IACf,sBAAsB;IACtB,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;AAChB\",\"sourcesContent\":[\".react-flow__node-insight {\\n    font-size: 8px;\\n    background: #a2d2bc;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    width: auto;\\n    height: auto;\\n    text-align: left;\\n    max-width: \\\"130px\\\";\\n    padding: 5px;\\n}\\n\\n.react-flow__node-plot {\\n    font-size: 10px;\\n    color: 'white';\\n    background: #9ab75e;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    width: 130px;\\n    height: auto;\\n    text-align: center;\\n    padding: 5px;\\n}\\n\\ndiv.CodeMirror-linebackground.jp-InputArea-editor-dependencyline {\\n    background-color: #f0c633;\\n  }\\n\\n  .react-flow__node-raw {\\n    font-size: 10px;\\n    border: 1px solid #555;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    max-width: \\\"130px\\\";\\n    padding: 5px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\nimport { useReactFlow, getRectOfNodes, getTransformForBounds } from 'reactflow';\nimport { toPng } from 'html-to-image';\nimport CIcon from '@coreui/icons-react';\nimport { cilSave } from '@coreui/icons';\n\nfunction downloadImage(dataUrl: string) {\n  const a = document.createElement('a');\n\n  a.setAttribute('download', 'reactflow.png');\n  a.setAttribute('href', dataUrl);\n  a.click();\n}\n\nconst imageWidth = 1024;\nconst imageHeight = 1024;\n\nexport function DownloadButton() {\n  const { getNodes } = useReactFlow();\n  const iconStyle = {\n    marginLeft: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  }\n\n  const onClick = () => {\n    const nodesBounds = getRectOfNodes(getNodes());\n    const transform = getTransformForBounds(nodesBounds, imageWidth, imageHeight, 0.5, 2);\n\n    const viewPort = document.querySelector('.react-flow__viewport')! as HTMLElement;\n\n    toPng(viewPort, {\n      backgroundColor: 'white',\n      width: imageWidth,\n      height: imageHeight,\n      style: {\n        width: imageWidth.toString(),\n        height: imageHeight.toString(),\n        transform: `translate(${transform[0]}px, ${transform[1]}px) scale(${transform[2]})`,\n      },\n    }).then(downloadImage);\n  };\n\n  return (\n    <CIcon icon={cilSave} style={iconStyle} size=\"xxl\" onClick={onClick} title={\"Save the tree as an image\"} />\n    );\n}\n\nexport default DownloadButton;\n","import React, { memo, useState } from 'react';\nimport { Handle, NodeProps, Position } from 'reactflow';\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown';\n\n\nconst InsightNode = ({ data }: NodeProps) => {\n    let displayInsight = data.label;\n    const displayMaxLength = 100;\n    if(displayInsight.length > displayMaxLength) {\n        let truncatedInsight = data.label.substring(0, 100);\n        const lastSpaceIndex = truncatedInsight.lastIndexOf(' ');\n        if (lastSpaceIndex !== -1 && lastSpaceIndex !== truncatedInsight.length - 1) {\n            truncatedInsight = truncatedInsight.substring(0, lastSpaceIndex);\n        }\n        displayInsight = truncatedInsight + '...';\n    }\n\n    const [isHovered, setIsHovered] = useState(false);\n    const handleMouseEnter = () => { setIsHovered(true); }\n    const handleMouseLeave = () => { setIsHovered(false); }\n\n    return (\n        <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n            <Handle type=\"target\" position={Position.Top} />\n            <div>\n              <ReactMarkdown>{displayInsight}</ReactMarkdown>\n                  {isHovered && (<div\n                  style={{\n                    position: 'absolute',\n                    top: '-40px',\n                    left: '0%',\n                    backgroundColor: '#ffffff',\n                    padding: '8px',\n                    width: \"auto\",\n                    height: \"auto\",\n                    minWidth: \"130px\",\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n                  }}\n                >\n                  <ReactMarkdown>{data.label}</ReactMarkdown>\n                </div>)}\n              </div>\n        </div>\n    );\n  }\n\n\nexport default memo(InsightNode);","import { ReactWidget } from '@jupyterlab/apputils';\nimport React, { useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n    Node,\n    Background,\n    Controls,\n    MiniMap,\n    useNodesState,\n    useEdgesState,\n    ConnectionLineType,\n    SelectionMode,\n} from \"reactflow\";\nimport { Legend } from \"./Legend\";\nimport { \n    translateTreeUtilCommand } from \"./TreeUtils\";\n\nimport RecommendEdge from \"./RecommendEdge\";\n\nimport allNodes from \"./NodesAndEdges/KnowledgeGraph/Nodes.json\";\nimport allEdges from \"./NodesAndEdges/KnowledgeGraph/Edges.json\";\nimport DownloadButton from './DownloadButton';\n\nconst panOnDrag = [1, 2];\nconst nodeColor = (node: Node) => {\n    switch (node.data.nodeType) {\n      case 'root':\n        return '#e8a9a9';\n      case 'raw':\n        return '#e8ac6e';\n      case 'secondary':\n        return '#f0c633';\n      case 'plot':\n        return '#9ab75e';\n      case 'insight':\n          return '#a2d2bc';\n      default:\n        return '#ffffff';\n    }\n  };\n  const { nodes: initialNodes, edges: initialEdges } = translateTreeUtilCommand(\n    'GetInitial',\n    null,\n    null,\n    null,\n    allNodes,\n    allEdges,\n    []\n)\nconst edgeTypes = {\n    knowledgeGraph: RecommendEdge,\n}\n  \n\nconst KnowledgeGraphComponent = () => {\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n    const [canExpandAll, setCanExpandAll] = useState(false);\n    const [canCollapseAll, setCanCollapseAll] = useState(false);\n    const [canCollapseNonTop, setCanCollapseNonTop] = useState(false);\n    const [selectedNode, setSelectedNode] = useState<Node | null>(null);\n\n    const handleNodeClick = (event: MouseEvent, node: Node) => {\n        if (allNodes === null || allEdges === null) {\n            console.log('[handleNodeClick] allNodes or allEdges is null')\n            return;\n        }\n        setSelectedNode(node);\n        // change node border width\n        const newNodes = nodes.map((prevNode)=> {\n            if (prevNode.id === node.id) {\n                // prevNode.style = {...prevNode.style, background: '#e06666'};\n                prevNode.style = {...prevNode.style, borderWidth: '2px'};\n            }\n            else {\n                prevNode.style = {...prevNode.style, borderWidth: '1px'};\n            }\n            return prevNode;\n        });\n        setNodes(newNodes);\n        setCanExpandAll(false);\n        setCanCollapseAll(false);\n    }\n\n\n    const collapseBackToInitial = () => {\n        // collapse the tree to initial state\n        const { nodes: newNodes, edges: newEdges } = translateTreeUtilCommand(\n            'CollapseBackToInitial',\n            null,\n            nodes,\n            edges,\n            allNodes,\n            allEdges,\n            []\n        )\n        setNodes(newNodes);\n        setEdges(newEdges);\n    }\n\n    const handleCollapseAllButtonClick = () => {\n        if(canCollapseAll) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'CollapseSubtree',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                []\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanCollapseAll(false);\n        }\n        else {\n            console.log('Cannot do collapseAll to this node!');\n        }\n    }\n\n    const handleExpandAllNodesButtonClick = () => {\n        const { nodes: newNodes, edges: newEdges } = translateTreeUtilCommand(\n            'ExpandAllNodes',\n            null,\n            nodes,\n            edges,\n            allNodes,\n            allEdges,\n            []\n        )\n        setNodes(newNodes);\n        setEdges(newEdges);\n    }\n\n    const handleCollapseNonTopButtonClick = () => {\n        if (canCollapseNonTop) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'CollapseNonTop',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                []\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanCollapseNonTop(false);\n        }\n        else {\n            console.log('Cannot do collapseNonTop to this node!');\n        }\n    }\n\n    const handleExpandAllButtonClick = () => {\n        if(selectedNode && canExpandAll) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'ExpandSubtree',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                []\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanExpandAll(false);\n        }\n        else {\n            console.log(`Cannot do expandAll to this node.`);\n        }\n    }\n\n    \n    const resetNodeStyles = () => {\n        const resetNodes = nodes.map((prevNode)=> {prevNode.style = {...prevNode.style, borderWidth: '1px'}; return prevNode;});\n        setNodes(resetNodes);\n    }\n\n    const resetAllStatus = () => {\n        resetNodeStyles();\n        setSelectedNode(null);\n        // setSelectedEdge(null);\n    }\n\n    return (\n        <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            // nodeTypes={nodeTypes}\n            edgeTypes={edgeTypes}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onNodeClick={handleNodeClick}\n            // onEdgeClick={handleEdgeClick}\n            connectionLineType={ConnectionLineType.SmoothStep}\n            fitView\n            panOnScroll\n            selectionOnDrag\n            panOnDrag={panOnDrag}\n            selectionMode={SelectionMode.Partial}\n            onPaneClick={() => {\n                resetAllStatus();\n              }}\n            deleteKeyCode={null}\n        >\n        <Background />\n        <div style={{ position: 'absolute', left: 10, top: 10, zIndex: 4 }}>\n            <Legend />\n        </div>\n        <div style={{ position: 'absolute', right: 10, top: 10, zIndex: 4 }}>\n            <button onClick={handleCollapseAllButtonClick} disabled={!canCollapseAll} style={{ marginRight: 5 }}>\n                Collapse all children\n            </button>\n            <button onClick={handleCollapseNonTopButtonClick} disabled={!canCollapseNonTop} style={{ marginRight: 5 }}>\n                Collapse non-top-3 children\n            </button>\n            <button onClick={handleExpandAllButtonClick} disabled={!canExpandAll} style={{ marginRight: 5 }}>\n                Expand all children\n            </button>\n            <button onClick={collapseBackToInitial} style={{ marginRight: 5 }}>\n                Collapse back to initial\n            </button>\n            <button onClick={handleExpandAllNodesButtonClick} style={{ marginRight: 5 }}>\n                Expand all nodes\n            </button>\n        </div>\n        <div style={{ position: 'absolute', right: 10, top: 50, zIndex: 4 }}>\n            <DownloadButton />\n        </div>\n        <MiniMap nodeColor={nodeColor} nodeStrokeWidth={3} zoomable pannable />\n        <Controls/>\n        </ReactFlow>\n  );\n\n}\n\nexport class KnowledgeGraphWidget extends ReactWidget {\n    constructor() {\n        super();\n    }\n\n    render(): JSX.Element {\n        return <KnowledgeGraphComponent />;\n    }\n}","import { CButton, CCard, CCardBody, CCollapse } from '@coreui/react';\nimport React, {useState} from 'react';\n\nexport function Legend() {\n    const legendItemStyle = {\n        display: 'flex',\n        marginBottom: '10px'\n    };\n    const legendNodeStyle = {\n        width: '80px',\n        height: '20px',\n        marginRight: '10px'\n    };\n    // const dashedLineStyle = {\n    //     width:'80px',\n    //     textAlign:\"center\" as \"center\",\n    //     borderBottom: \"1px dashed red\",\n    //     lineHeight:\"0.1em\",\n    //     margin:\"10px 0 20px\"\n    // };\n    // const dashedLineTextStyle = {\n    //     background: \"#E1E1E1\",\n    // };\n    const redStyle = {\n        color: \"red\"\n    }\n    const legendLongText= {\n        flex: \"1\",\n        maxWidth: \"200px\",\n        wordWrap: \"break-word\" as \"break-word\"\n    }\n    const legendCardStyle = {\n        display: 'flex', \n        justifyContent: 'left',\n        width: '400px',\n    }\n    const [visible, setVisible] = useState(false);\n    \n    // return (\n    //     <div style={{backgroundColor: '#E1E1E1', opacity: '0.8', padding: '10px', width: \"300px\"}}>\n    //         <div style={{display: 'flex', justifyContent: 'center' }}>\n    //             <h4>Legend</h4>\n    //         </div>\n    //         <ul>\n    //             <li>\n    //                 <div style={ legendItemStyle }>\n    //                     <div style={{...legendNodeStyle, backgroundColor: '#e8ac6e'}}></div>\n    //                     Column name\n    //                 </div>\n    //             </li>\n    //             <li>\n    //                 <div style={legendItemStyle}>\n    //                     <div style={{...legendNodeStyle, backgroundColor: '#9ab75e'}}></div>\n    //                     Method\n    //                 </div>\n    //             </li>\n    //             <li>\n    //                 <div style={legendItemStyle}>\n    //                     <div style={{...legendNodeStyle, backgroundColor: '#a2d2bc'}}></div>\n    //                     Insight\n    //                 </div>\n    //             </li>\n    //             <li>\n    //                 <div style={legendItemStyle}>\n    //                     <div style={legendNodeStyle}>\n    //                         <span style={redStyle}>----</span>x/y<span style={redStyle}>----</span>\n    //                     </div>\n    //                     <span style={legendLongText}>\n    //                         Recommendation edge: this column combination appears in y notebooks for x times.\n    //                         </span>\n    //                 </div>\n    //             </li>\n    //         </ul>\n    //     </div>\n    // )\n\n    return (\n        <div>\n            <CButton className=\"mb-3\" color=\"warning\" onClick={() => setVisible(!visible)} aria-expanded={visible} aria-controls=\"collapseLegend\">\n                Show legend\n            </CButton>\n            <div style={{ minHeight: '120px'}}>\n            <CCollapse id=\"collapseLegend\" horizontal visible={visible}>\n                <CCard style={legendCardStyle}>\n                <CCardBody style={{backgroundColor: '#E1E1E1', opacity: '0.8', padding: '10px', width: \"400px\"}}>\n                    <ul>\n                    <li>\n                        <div style={ legendItemStyle }>\n                            <div style={{...legendNodeStyle, backgroundColor: '#e8ac6e'}}></div>\n                            Column name\n                        </div>\n                    </li>\n                    <li>\n                        <div style={legendItemStyle}>\n                            <div style={{...legendNodeStyle, backgroundColor: '#9ab75e'}}></div>\n                            Method\n                        </div>\n                    </li>\n                    <li>\n                        <div style={legendItemStyle}>\n                            <div style={{...legendNodeStyle, backgroundColor: '#a2d2bc'}}></div>\n                            Insight\n                        </div>\n                    </li>\n                    <li>\n                        <div style={legendItemStyle}>\n                            <div style={{...legendNodeStyle, backgroundColor: '#E8AC6E', opacity: \"0.5\"}}></div>\n                            <span style={legendLongText}>Recommendation column</span>\n                        </div>\n                    </li>\n                    <li>\n                        <div style={legendItemStyle}>\n                            <div style={legendNodeStyle}>\n                                <span style={redStyle}>----</span>x/y<span style={redStyle}>----</span>\n                            </div>\n                            <span style={legendLongText}>\n                                Recommendation edge\n                                </span>\n                        </div>\n                    </li>\n                </ul>\n                </CCardBody>\n                </CCard>\n            </CCollapse>\n            </div>\n        </div>\n    )\n}","import React, { memo, useState, useEffect } from 'react';\nimport { Handle, NodeProps, Position } from 'reactflow';\nimport axios from \"axios\";\n\n\nconst PlotNode = ({ data }: NodeProps) => {\n    const [imageData, setImageData] = useState<string|null>(null);\n    const clipTextStyle = {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\" as \"nowrap\",\n    };\n    const codeStyle = {\n        fontSize: \"12px\",\n        color: \"black\"\n    }\n    // const [imageData, setImageData] = useState<Blob|null>(null);\n    \n    // useEffect(() => {\n    //     const fetchImage = async() => {\n    //         try {\n    //             const response = await axios.get('http://128.100.10.43:4000/plot');\n    //             if (response.status === 200) {\n    //                 const imageBlob = new Blob([response.data], {type: response.headers['content-type']});\n    //                 setImageData(imageBlob);\n    //                 console.log('[PlotNode] Fetched plot image.', response.data);\n    //             } else {\n    //                 console.error('[PlotNode] Failed to fetch plot image.');\n    //             }\n    //         } catch(error) {\n    //             console.error('[PlotNode] Error when fetching plot image:', error);\n    //         }\n    //     }\n    //     fetchImage();\n    // }, []);\n\n    // const imageSource = useMemo(() => {\n    //     if (imageData) {\n    //         return URL.createObjectURL(imageData);\n    //     } else {\n    //         return null;\n    //     }\n    // }, [imageData]);\n    \n    const backendUrl = \"http://128.100.10.43:8080/proxy/4000\";\n\n    useEffect(() => {\n        // Fetch the image data from the server\n        axios.get(backendUrl + `/plot/${data.methodId}`, { responseType: 'blob', withCredentials: true })\n          .then((response) => {\n            const blob = response.data;\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const dataUrl = reader.result as string;\n              setImageData(dataUrl);\n            };\n            reader.readAsDataURL(blob);\n          })\n          .catch((error) => {\n            console.error(`Error when fecthing images of method_id=${data.methodId}:`, error);\n          });\n      }, []);\n\n    const handleImageError = (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n        event.currentTarget.style.display = 'none';\n      };\n    \n    return (\n        <div>\n            <Handle type=\"target\" position={Position.Top} />\n              {/* <div>{data.label}</div> */}\n              <div style={clipTextStyle}><code style={codeStyle}>{data.code}</code></div>\n              <div>{imageData && <img src={imageData} style={{maxWidth: '120px', maxHeight: '100px'}} onError={handleImageError}/>}</div>           \n            <Handle type=\"source\" position={Position.Bottom} />\n        </div>\n    );\n  }\n//   <div>{ imageSource && <img src={imageSource} style={{maxWidth: '120px', maxHeight: '100px'}}/>}</div>\n\nexport default memo(PlotNode);","import React, { memo } from 'react';\nimport { Handle, Position, NodeToolbar, NodeProps } from 'reactflow';\n\nconst RawNode = ({ data }: NodeProps ) => {\n\n    return (\n        <div>\n            <NodeToolbar position={Position.Top}>\n                <button>Collapse all children</button>\n                <button>Collapse non-top-3 children</button>\n                <button>Expand children</button>\n            </NodeToolbar>\n            <div>{data.label}</div>\n            <Handle type=\"target\" position={Position.Top} />\n            <Handle type=\"source\" position={Position.Bottom} />\n        </div>\n    );\n};\n\nexport default memo(RawNode);\n","import React, { MouseEvent, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { ReactWidget } from '@jupyterlab/apputils'; // for converting a react component to a react widget in JL\nimport \"reactflow/dist/style.css\";\nimport '../style/node.css'\nimport '@coreui/coreui/dist/css/coreui.min.css'\n\nimport ReactFlow, {\n  Node,\n  Edge,\n  addEdge,\n  Background,\n  useNodesState,\n  useEdgesState,\n  MiniMap,\n  Controls,\n  SelectionMode,\n  ConnectionLineType,\n  Connection,\n  Panel,\n} from \"reactflow\";\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\nimport axios from \"axios\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { CodeMirrorEditor } from \"@jupyterlab/codemirror\";\n\nimport { \n    translateTreeUtilCommand, \n    getLayoutedElements,\n    isEdgeRemoveable,\n    removeEdge,\n    isEdgeConnectable,\n    EdgeOperation,\n    getPathVariableCombination} from \"./TreeUtils\";\nimport InsightNode from \"./InsightNode\";\nimport PlotNode from \"./PlotNode\";\nimport { Legend } from \"./Legend\";\n// import RecommendEdge from \"./RecommendEdge\";\nimport RawNode from \"./RawNode\";\nimport { CButton, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilReload } from \"@coreui/icons\";\nimport { RecommendationCodeSnippets } from \"./RecommendationCodeSnippets\";\n// import { DownloadButton } from \"./DownloadButton\";\n\nconst panOnDrag = [1, 2];\nconst HIGHLIGHTED_LINE_CLASS = \"jp-InputArea-editor-dependencyline\";\n\n// Node colour schema\nconst nodeColor = (node: Node) => {\n  switch (node.data.nodeType) {\n    case 'root':\n      return '#e8a9a9';\n    case 'raw':\n      return '#e8ac6e';\n    case 'secondary':\n      return '#f0c633';\n    case 'plot':\n      return '#9ab75e';\n    case 'insight':\n        return '#a2d2bc';\n    default:\n      return '#ffffff';\n  }\n};\nconst LoadIndicator = () => {\n    const { promiseInProgress } = usePromiseTracker();\n    return promiseInProgress ? (\n    <div style={{marginRight: 5}}>\n        <ThreeDots height=\"80\" width=\"80\" radius=\"9\" color=\"#e8ac6e\" ariaLabel=\"three-dots-loading\" visible={true}/>\n    </div>) : (<></>);\n}\nconst nodeTypes = {\n    insight: InsightNode,\n    plot: PlotNode,\n    raw: RawNode\n};\n// const edgeTypes = {\n//     recommended: RecommendEdge,\n// }\n\n\ninterface FlowComponentProps {\n    notebookPanel: NotebookPanel | null;\n    notebookTracker: INotebookTracker | null;\n}\n\nconst FlowComponent = (props: FlowComponentProps) => {\n    const [selectedNode, setSelectedNode] = useState<Node | null>(null);\n    const [selectedEdge, setSelectedEdge] = useState<Edge | null>(null);\n    const [isSelectedEdgeRemovable, setIsSelectedEdgeRemovable] = useState(false);\n    const [canExpandAll, setCanExpandAll] = useState(false);\n    const [canCollapseAll, setCanCollapseAll] = useState(false);\n    const [canCollapseNonTop, setCanCollapseNonTop] = useState(false);\n    const [isRecommendationDisplayed, setIsRecommendationDisplayed] = useState(false);\n    \n    const defaultSrcNbAndCode = {\n        sourceNotebook: \"\",\n        sourceCode: [\"# Loading, please wait for a while...\"],\n    };\n    const [isRecommendNodeSelected, setIsRecommendNodeSelected] = useState(false);\n    const [selectedRecommendedPath, setSelectedRecommendedPath] = useState<string[]>([]);\n    const [srcNbAndCodeListForRec, setSrcNbAndCodeListForRec] = useState([defaultSrcNbAndCode,]);\n\n    const [allNodes, setAllNodes] = useState<Node[] | null>([]);\n    const [allEdges, setAllEdges] = useState<Edge[] | null>([]);\n\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n    // const edgeUpdateSuccessful = useRef(true)\n    const highlightedCellLines = useRef<number[][]>([]); // [[cellIndex, lineNumber], ...\n    const highlightedCells = useRef<number[]>([]); // [[cellIndex, lineNumber], ...\n    const edgeOperations = useRef<EdgeOperation[]>([]);\n\n    const collapseBackToInitial = () => {\n        // collapse the tree to initial state\n        const { nodes: newNodes, edges: newEdges } = translateTreeUtilCommand(\n            'CollapseBackToInitial',\n            null,\n            nodes,\n            edges,\n            allNodes,\n            allEdges,\n            edgeOperations.current\n        )\n        setNodes(newNodes);\n        setEdges(newEdges);\n    }\n\n    const highlightCellLine = (cellIndex: number, lineNumber: number) => {\n        // get cell by cellIndex\n        // console.log(`[highlightCell] cellIndex: ${cellIndex}, lineNumber=${lineNumber}`);\n        if (props.notebookTracker === null || props.notebookTracker.currentWidget === null) {\n            console.log('[highlightCell] no notebookTracker or no notebookPanel.');\n            return;\n        }\n        const cellList = props.notebookTracker.currentWidget.content.widgets;\n        const cell = cellList[cellIndex];\n        if (cell && cell.editor instanceof CodeMirrorEditor) {\n            const editor = cell.editor.editor;\n            editor.addLineClass(lineNumber, \"background\", HIGHLIGHTED_LINE_CLASS);\n            highlightedCellLines.current.push([cellIndex, lineNumber]);\n        }\n        else {\n            console.log('[highlightCell] the editor of activeCell is not a CodeMirrorEditor');\n        }\n    }\n\n    const highlightCell = (cellIndex: number) => {\n        if (props.notebookTracker === null || props.notebookTracker.currentWidget === null) {\n            console.log('[highlightCell] no notebookTracker or no notebookPanel.');\n            return;\n        }\n        const cellList = props.notebookTracker.currentWidget.content.widgets;\n        const cell = cellList[cellIndex];\n        cell.node.style.backgroundColor = '#f0c633';\n        highlightedCells.current.push(cellIndex);\n        return true;\n    }\n\n    const clearHighlightedCellLines = () => {\n        if (props.notebookTracker === null || props.notebookTracker.currentWidget === null) {\n            console.log('[clearHighlightedCellLines] no notebookTracker or no notebookPanel.');\n            return;\n        }\n        const cellList = props.notebookTracker.currentWidget.content.widgets;\n        for(let [cellIndex, lineNumber] of highlightedCellLines.current) {\n            const cell = cellList[cellIndex];\n            if (cell && cell.editor instanceof CodeMirrorEditor) {\n                const editor = cell.editor.editor;\n                editor.removeLineClass(lineNumber, \"background\", HIGHLIGHTED_LINE_CLASS);\n            }\n            else {\n                console.log('[clearHighlightedCellLines] the editor of activeCell is not a CodeMirrorEditor');\n            }\n        }\n        highlightedCellLines.current = [];\n    }\n\n    const clearHighlightedCells = () => {\n        if (props.notebookTracker === null || props.notebookTracker.currentWidget === null) {\n            console.log('[clearHighlightedCellLines] no notebookTracker or no notebookPanel.');\n            return;\n        }\n        const cellList = props.notebookTracker.currentWidget.content.widgets;\n        for(let cellIndex of highlightedCells.current) {\n            const cell = cellList[cellIndex];\n            cell.node.style.backgroundColor = '';\n        }\n        highlightedCells.current = [];\n    }\n\n    const setActiveCell = (cellIndex: number) => {\n        if (props.notebookTracker === null || props.notebookTracker.currentWidget === null) {\n            console.log('[highlightCell] no notebookTracker or no notebookPanel.');\n            return;\n        }\n        const notebookPanel = props.notebookTracker.currentWidget;\n        notebookPanel.content.activeCellIndex = cellIndex;\n        const activeCell = props.notebookTracker.currentWidget.content.activeCell!;\n        notebookPanel.content.scrollToCell(activeCell);\n        console.log(`activeCellIndex after setFocusCell: ${props.notebookTracker.currentWidget.content.activeCellIndex}`);\n    }\n\n    function fetchCodeSnippetForSelectedRecommendation(variableCombination: string[]) {\n        if (variableCombination.length === 0) {\n            console.log(`[FetchRecommendationCodeSnippets] empty variableCombination`);\n            return [defaultSrcNbAndCode,];\n        }\n        console.log(`[FetchRecommendationCodeSnippets] start to fetch code snippets of variableCombination=${variableCombination}:`);\n        const recommendationCodeSnippetUrl = backendUrl + \"/recommendation-code-snippets\";\n        const request = {\n            variableCombination: JSON.stringify(variableCombination),\n        }\n        trackPromise(\n        axios.post(recommendationCodeSnippetUrl, request, {withCredentials: true, }).then((response) => {\n            console.log(`[FetchRecommendationCodeSnippets] Fetched code snippets of variableCombination=${variableCombination}:`);\n            const newSrcNbAndCodeList = response.data.srcNotebooksAndCode;\n            if (newSrcNbAndCodeList.length === 0) {\n                newSrcNbAndCodeList.push(defaultSrcNbAndCode);\n            }\n            setSrcNbAndCodeListForRec(newSrcNbAndCodeList);\n        }).catch((error) => {\n            console.error(`Error when fecthing code snippets of variableCombination=${variableCombination}:`, error);\n        }));\n    }\n\n\n    const handleNodeClick = (event: MouseEvent, node: Node) => {\n        if (allNodes === null || allEdges === null) {\n            console.log('[handleNodeClick] allNodes or allEdges is null')\n            return;\n        }\n        console.log(`[handleNodeClick] node clicked, id=${node.id}`);\n        setSelectedNode(node);\n        // change node border width\n        const newNodes = nodes.map((prevNode)=> {\n            if (prevNode.id === node.id) {\n                prevNode.style = {...prevNode.style, borderWidth: '2px'};\n            }\n            else {\n                prevNode.style = {...prevNode.style, borderWidth: '1px'};\n            }\n            return prevNode;\n        });\n        setNodes(newNodes);\n\n        const highlightNodeTypes = [\"insight\", \"plot\"];\n        if (node.data.nodeType === 'raw') {\n            // update collapse/expand state\n            const selectedNodeHasChildren = nodes.some((n) => n.data.parent === node.id);\n            setCanExpandAll(!selectedNodeHasChildren);\n            setCanCollapseAll(selectedNodeHasChildren);\n            const etcNodeInChildren = allNodes.find((n) => n.data.parent === node.id && n.data.nodeType === 'etc');\n            const etcNodeAlreadyExists = nodes.find((n) => n.data.parent === node.id && n.data.nodeType === 'etc');\n            const selectedNodeCanCollapseNonTop = (etcNodeAlreadyExists === undefined) && (etcNodeInChildren !== undefined) && !(nodes.some((n) => {n.data.parent === etcNodeInChildren.id}));\n            setCanCollapseNonTop(selectedNodeCanCollapseNonTop);\n            if (node.data.nodeType === 'etc') {\n                const { nodes: newNodes, edges: newEdges } = translateTreeUtilCommand(\n                    'ExpandEtcNode',\n                    node,\n                    nodes,\n                    edges,\n                    allNodes,\n                    allEdges,\n                    edgeOperations.current\n                )\n                setNodes(newNodes);\n                setEdges(newEdges);\n                return;\n            }\n        }\n        else if (highlightNodeTypes.includes(node.data.nodeType)) {\n            // disable buttons\n            setCanExpandAll(false);\n            setCanCollapseAll(false);\n            clearHighlightedCellLines();\n            clearHighlightedCells();\n            if(props.notebookTracker && props.notebookTracker.currentWidget) {\n                // jump to the corresponding notebook and cell\n                const cellIndex = node.data.cellIndex;\n                setActiveCell(cellIndex);\n                if (node.data.nodeType === 'insight') {\n                    highlightCell(cellIndex);\n                }\n                // console.log(`[handleNodeClick] node.data.slices=${JSON.stringify(node.data.slices)}`);\n                for (let slice of node.data.slices) {\n                    const cellIndex = slice[0];\n                    const lineNumber = slice[1];\n                    highlightCellLine(cellIndex, lineNumber);\n                }\n                \n            }\n            else {\n                console.log('FlowWidget: No notebookTracker');\n            }\n        }\n        else if (node.data.nodeType === 'recommended') {\n            const variableCombination = getPathVariableCombination(node, allNodes);\n            console.log(`[handleNodeClick] Select variableCombination=${variableCombination}, start to fetch code snippets.`);\n            fetchCodeSnippetForSelectedRecommendation(variableCombination);\n            setIsRecommendNodeSelected(true);\n            console.log(`[handleNodeClick] subset of selected recommend node=${variableCombination}`);\n            setSelectedRecommendedPath(variableCombination);\n        }\n\n    }\n\n\n    const handleEdgeClick = (event: MouseEvent, edge: Edge) => {\n        setSelectedEdge(edge);\n        setIsSelectedEdgeRemovable(isEdgeRemoveable(edge, nodes, edges));\n        console.log(`[handleEdgeClick] selectedEdge: ${JSON.stringify(edge)}`);\n    }\n\n    const handleExpandAllChildrenButtonClick = () => {\n        if(selectedNode && canExpandAll) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'ExpandSubtree',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                edgeOperations.current\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanExpandAll(false);\n        }\n        else {\n            console.log(`Cannot do expandAll to this node.`);\n        }\n\n    }\n\n    const handleCollapseAllButtonClick = () => {\n        if(selectedNode && canCollapseAll) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'CollapseSubtree',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                edgeOperations.current\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanCollapseAll(false);\n        }\n        else {\n            console.log('Cannot do collapseAll to this node!');\n        }\n    }\n\n    const handleCollapseNonTopButtonClick = () => {\n        if (selectedNode && canCollapseNonTop) {\n            const { nodes: newNodes, edges: newEdges} = translateTreeUtilCommand(\n                'CollapseNonTop',\n                selectedNode,\n                nodes,\n                edges,\n                allNodes,\n                allEdges,\n                edgeOperations.current\n            );\n            setNodes(newNodes);\n            setEdges(newEdges);\n            setCanCollapseNonTop(false);\n        }\n        else {\n            console.log('Cannot do collapseNonTop to this node!');\n        }\n    }\n\n    const handleExpandAllNodesButtonClick = () => {\n        const { nodes: newNodes, edges: newEdges } = translateTreeUtilCommand(\n            'ExpandAllNodes',\n            null,\n            nodes,\n            edges,\n            allNodes,\n            allEdges,\n            edgeOperations.current\n        )\n        setNodes(newNodes);\n        setEdges(newEdges);\n    }\n\n    const resetNodeStyles = () => {\n        // const resetNodes = nodes.map((prevNode)=> {prevNode.style = {...prevNode.style, background: nodeColor(prevNode)}; return prevNode;});\n        const resetNodes = nodes.map((prevNode)=> {prevNode.style = {...prevNode.style, borderWidth: '1px'}; return prevNode;});\n        setNodes(resetNodes);\n        clearHighlightedCellLines();\n        clearHighlightedCells();\n    }\n\n    const resetAllStatus = () => {\n        resetNodeStyles();\n        setSelectedNode(null);\n        setSelectedEdge(null);\n        setIsRecommendNodeSelected(false);\n        setSelectedRecommendedPath([]);\n        setSrcNbAndCodeListForRec([defaultSrcNbAndCode,]);\n        edgeOperations.current = [];\n    }\n\n    // const backendUrl = \"http://127.0.0.1:4000\";\n    // send request through jupyter_server_proxy to prevent Same-Origin-P error\n    const backendUrl = \"http://128.100.10.43:8080/proxy/4000\";\n\n    const refreshSMITree = () => {\n        console.log('[refreshSMITree] refreshSMITree.');\n        disableRecommendations();\n        resetAllStatus();\n        if (!props.notebookPanel) {\n            console.log('[refreshSMITree] no notebook panel to be passed!');\n            return;\n        }\n        const request = {\n            notebook: JSON.stringify(props.notebookPanel!.model!.toJSON()),\n        }\n        trackPromise(\n        axios.post(backendUrl + '/tracking-tree', request, {withCredentials: true, }).then((response) => {\n            console.log(`[refreshSMITree] get response.`);\n            const refreshedNodes = response.data.nodes;\n            const refreshedEdges = response.data.edges;\n            // console.log(`[refreshSMITree] refreshedNodes: ${JSON.stringify(refreshedNodes)}`);\n            setAllNodes(refreshedNodes);\n            setAllEdges(refreshedEdges);\n            // const {initialNodes: initialRefreshedNodes, initialEdges: initialRefreshedEdges} = getInitialElements(refreshedNodes, refreshedEdges);\n            // const { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(initialRefreshedNodes, initialRefreshedEdges);\n            const { nodes: layoutedNodes, edges: layoutedEdges } = translateTreeUtilCommand(\n                'GetInitial',\n                null,\n                null,\n                null,\n                refreshedNodes,\n                refreshedEdges,\n                edgeOperations.current\n            );\n            setNodes(layoutedNodes);\n            setEdges(layoutedEdges);\n            // console.log(`[refreshSMITree] successfully refreshed nodes and edges.`);\n        }).catch((error) => {\n            console.log(`[refreshSMITree] error: ${error} when sending post request to ${backendUrl}/tracking-tree`);\n        }));\n    }\n\n    const getRecommendations = () => {\n        if (allNodes === null || allEdges === null) {\n            console.log('[getRecommendations] allNodes or allEdges is null')\n            return;\n        }\n        disableRecommendations();\n        resetAllStatus();\n        const request = {\n            nodes: JSON.stringify(nodes),\n            edges: JSON.stringify(edges),\n        }; // send current Nodes and Edges to backend so that recommendations will not be generated for hidden nodes\n        trackPromise(\n        axios.post(backendUrl + '/recommendations', request, {withCredentials: true, }).then((response) => {\n            // console.log(`[getRecommendations] get response: ${JSON.stringify(response.data)}`);\n            const recommendedNodes = response.data.recommendedNodes;\n            const recommendedEdges = response.data.recommendedEdges;\n            const newAllNodes = allNodes.concat(recommendedNodes);\n            const newAllEdges = [...allEdges, ...recommendedEdges];\n            setAllNodes(newAllNodes);\n            setAllEdges(newAllEdges);\n            const newNodes = nodes.concat(recommendedNodes);\n            const newEdges = edges.concat(recommendedEdges);\n            const { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(newNodes, newEdges);\n            setNodes(layoutedNodes);\n            setEdges(layoutedEdges);\n            setIsRecommendationDisplayed(true);\n        }).catch((error) => {\n            console.log(`[getRecommendations] error: ${error}`);\n        }));\n    }\n\n    const disableRecommendations = () => {\n        if (allNodes === null || allEdges === null) {\n            console.log('[disableRecommendations] allNodes or allEdges is null')\n            return;\n        }\n        if (selectedNode?.data.nodeType === 'recommended') {\n            resetNodeStyles();\n            setSelectedNode(null);\n        }\n        // remove the recommended nodes and edges\n        const newAllNodes = allNodes.filter((n) => n.data.nodeType !== 'recommended');\n        const newAllEdges = allEdges.filter((e) => (!e.source.startsWith('rec') && ! e.target.startsWith('rec')));\n        setAllNodes(newAllNodes);\n        setAllEdges(newAllEdges);\n        const newNodes = nodes.filter((n) => n.data.nodeType !== 'recommended');\n        const newEdges = edges.filter((e) => (!e.source.startsWith('rec') && ! e.target.startsWith('rec')));\n        const { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(newNodes, newEdges);\n        setNodes(layoutedNodes);\n        setEdges(layoutedEdges);\n        setIsRecommendationDisplayed(false);\n    }\n\n    const removeSelectedEdge = () => {\n        if (nodes === null || edges === null) {\n            console.log('[removeSelectedEdge] nodes or edges is null');\n            return;\n        }\n        if (selectedEdge && isSelectedEdgeRemovable) {\n            const { nodes: layoutedNodes, edges: layoutedEdges } = removeEdge(selectedEdge, nodes, edges);\n            if (layoutedNodes === null || layoutedEdges === null) {\n                console.log('[removeSelectedEdge] layoutedNodes or layoutedEdges is null')\n                return;\n            }\n            setNodes(layoutedNodes);\n            setEdges(layoutedEdges);\n            console.log(`[removeSelectedEdge] successfully removed edge: ${JSON.stringify(selectedEdge)}`);\n            edgeOperations.current.push({operation: 'remove', edge: selectedEdge});\n        }\n    }\n\n    const onConnect = (connection: Connection) => {\n        console.log(`[onConnect] newEdge: ${JSON.stringify(connection)}`);\n        console.log(`[onConnect] nodes: ${JSON.stringify(nodes)}`);\n        if (!isEdgeConnectable(connection, nodes)) {\n            console.log(`[onConnect] edge is not connectable.`);\n            return;\n        }\n        const newEdge: Edge = {\n            'id': `${connection.source}-${connection.target}`,\n            'source': connection.source!,\n            'target': connection.target!\n        };\n        setEdges((els) => addEdge(newEdge, els));\n        edgeOperations.current.push({operation: 'add', edge: newEdge});\n    }\n\n    // const getEnabledOptions= () => {\n    //     const enabledOptions = [];\n    //     enabledOptions.push(<CDropdownItem onClick={collapseBackToInitial}>Collapse back to initial</CDropdownItem>);\n    //     enabledOptions.push(<CDropdownItem onClick={handleExpandAllNodesButtonClick}>Expand all nodes</CDropdownItem>);\n    //     if (selectedNode && canCollapseAll) {\n    //         enabledOptions.push(<CDropdownItem onClick={handleCollapseAllButtonClick}>Collapse all children</CDropdownItem>);\n    //     }\n    //     if (selectedNode && canCollapseNonTop) {\n    //         enabledOptions.push(<CDropdownItem onClick={handleCollapseNonTopButtonClick}>Collapse non-top-3 children</CDropdownItem>);\n    //     }\n    //     if (selectedNode && canExpandAll) {\n    //         enabledOptions.push(<CDropdownItem onClick={handleExpandAllChildrenButtonClick}>Expand all children</CDropdownItem>);\n    //     }\n    // if (selectedEdge && isSelectedEdgeRemovable) {\n    //         enabledOptions.push(<CDropdownItem onClick={removeSelectedEdge} style={{marginRight: 5}}>Remove edge</CDropdownItem>)\n    //     }\n    //     return enabledOptions;\n    // }\n\n    const dropdownButtonStyle = {\n        height: \"35px\", \n    };\n\n    const pageTopContainerStyle = { \n        display: \"flex\",\n        width: \"100%\",\n        zIndex: \"100\",\n        justifyContent: \"space-between\",\n    };\n    \n    const buttonContainerStyle = {\n        flex: \"1\",\n        // marginLeft: \"5px\",\n        // marginRight: \"5px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\" as \"column\",\n    };\n\n    const buttonGroupWithBorderSytle = { \n        border: \"2px dashed black\",\n        padding: \"5px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    };\n\n    const recommendationButtonStyle = {\n        height: \"35px\",\n        minWidth: \"220px\",\n    };\n\n    const iconStyle = {\n        marginLeft: \"5px\",\n        marginRight: \"5px\",\n        cursor: \"pointer\"\n    }\n    \n  return (\n        <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            nodeTypes={nodeTypes}\n            // edgeTypes={edgeTypes}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={handleNodeClick}\n            onEdgeClick={handleEdgeClick}\n            connectionLineType={ConnectionLineType.SmoothStep}\n            fitView\n            panOnScroll\n            selectionOnDrag\n            panOnDrag={panOnDrag}\n            selectionMode={SelectionMode.Partial}\n            onPaneClick={() => {\n                resetAllStatus();\n              }}\n            deleteKeyCode={null}\n        >\n        <Background />\n            \n        <Panel position=\"top-center\" style={{width: \"100%\"}}>\n            <div style={pageTopContainerStyle}>\n            <div style={{flex: \"1\", maxWidth: \"150px\"}}>\n                <Legend />\n            </div>\n\n            <div style={{flex: \"1\", maxWidth: \"50px\"}}>\n                {/* <CButton style={dropdownButtonStyle} onClick={refreshSMITree}>Refresh</CButton> */}\n                <CIcon icon={cilReload} style={iconStyle} size=\"xxl\" onClick={refreshSMITree} title={\"Generate/refresh the tree\"}/>\n                {/* <DownloadButton/> */}\n            </div>\n\n            <div style={{flex: \"1\", maxWidth: \"100px\"}}><LoadIndicator/></div>\n            \n            \n            <div style={buttonContainerStyle}>\n                <div style={{...buttonGroupWithBorderSytle}}>\n                    {(!isRecommendationDisplayed) && <CButton color=\"warning\" style={recommendationButtonStyle} onClick={getRecommendations}>Show recommendations</CButton> }\n                    {(isRecommendationDisplayed) && <CButton color=\"warning\" style={recommendationButtonStyle} onClick={disableRecommendations} disabled={!isRecommendationDisplayed}>Hide recommendations</CButton>}\n                </div>\n                <span>Get help in data explartion</span>\n            </div>\n            \n            {isRecommendNodeSelected &&\n                <div style={{flex: \"1\"}}>\n                    <RecommendationCodeSnippets \n                        variableCombination={selectedRecommendedPath}\n                        srcNbAndCodeList={srcNbAndCodeListForRec}/>\n                    </div>}\n\n\n            <div style={buttonContainerStyle}>\n                <div style={{...buttonGroupWithBorderSytle}}>\n                    <CDropdown style={dropdownButtonStyle}>\n                        <CDropdownToggle color=\"warning\">Collapse</CDropdownToggle>\n                        <CDropdownMenu>\n                            <CDropdownItem onClick={handleCollapseNonTopButtonClick}>Collapse non-top-3 children of the selected node</CDropdownItem>\n                            <CDropdownItem onClick={handleCollapseAllButtonClick}>Collapse all children of the selected node</CDropdownItem>\n                            <CDropdownItem onClick={collapseBackToInitial}>Collapse the whole tree back to initial</CDropdownItem>\n                        </CDropdownMenu>\n                    </CDropdown>\n                    <CDropdown style={{...dropdownButtonStyle, marginLeft: \"10px\"}}>\n                        <CDropdownToggle color=\"warning\">Expand</CDropdownToggle>\n                        <CDropdownMenu>\n                            <CDropdownItem onClick={handleExpandAllChildrenButtonClick}>Expand all children of the selected node</CDropdownItem>\n                            <CDropdownItem onClick={handleExpandAllNodesButtonClick}>Expand all nodes in the tree</CDropdownItem>\n                        </CDropdownMenu>\n                    </CDropdown>\n                </div>\n                {(selectedEdge && isSelectedEdgeRemovable) &&\n                    <CButton color=\"warning\" style={dropdownButtonStyle} onClick={removeSelectedEdge}> Remove the selected edge</CButton>}\n                <span>Collapse/expand nodes</span>\n                </div>\n        </div>\n        </Panel>\n        <MiniMap nodeColor={nodeColor} nodeStrokeWidth={3} zoomable pannable />\n        <Controls/>\n        </ReactFlow>\n  );\n};\n\n/**\n * A Lumino Widget that wraps a FlowComponent.\n */\nexport class FlowWidget extends ReactWidget {\n  /**\n   * Constructs a new FlowWidget.\n   */\n    private _notebookPanel: NotebookPanel | null = null;\n    private _notebookTracker: INotebookTracker | null = null;\n    \n    set notebookPanel(notebook: NotebookPanel | null) {\n        this._notebookPanel = notebook;\n    }\n\n    set notebookTracker(tracker: INotebookTracker | null) {\n        this._notebookTracker = tracker;\n    }\n\n    constructor(panel?: NotebookPanel | null, tracker?: INotebookTracker | null) {\n        super();\n        console.log('FlowWidget created');\n        console.log('notebook panel assigned to FlowWidget:');\n        console.log(this._notebookPanel);\n        // this._notebookPanel = panel ? panel : null;\n        this._notebookTracker = tracker ? tracker : null;\n        this._notebookPanel = tracker ? tracker.currentWidget : null;\n    }\n\n\n    render(): JSX.Element {\n        console.log(`notebookTracker passed to FlowComponent: ${this._notebookTracker}`);\n        console.log(`notebookPanel passed to FlowComponent: ${this._notebookPanel}`);\n        return <FlowComponent notebookPanel={this._notebookPanel} notebookTracker={this._notebookTracker}/>;\n    }\n}\n","import React from 'react';\n// import { useState } from 'react';\nimport { BaseEdge, EdgeLabelRenderer, EdgeProps, getBezierPath } from 'reactflow';\n\n\nexport default function RecommendEdge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  label,\n  data,\n  markerEnd,\n}: EdgeProps) {\n    const [edgePath, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n    // const [isHovered, setIsHovered] = useState(false);\n    // const handleMouseEnter = () => { \n        // setIsHovered(true);\n        // console.log('sourceNotebooks=', data.sourceNotebooks);\n    // }\n    // const handleMouseLeave = () => { setIsHovered(false); }\n\n    // const notebooks = [];\n\n    // for (let i = 0; i < data.sourceNotebooks.length; i++) {\n    //     notebooks.push(<li key={i}>{data.sourceNotebooks[i]}</li>);\n    // }\n\n    return (\n        <>\n        <BaseEdge path={edgePath} markerEnd={markerEnd} style={style}  />\n        <EdgeLabelRenderer>\n            <div\n            style={{\n                position: 'absolute',\n                transform: `translate(-50%, -50%) translate(${labelX}px,${labelY}px)`,\n                // everything inside EdgeLabelRenderer has no pointer events by default\n                // if you have an interactive element, set pointer-events: all\n                pointerEvents: 'all',\n            }}\n            >\n                <div /*onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onClick={handleMouseEnter}*/>\n                    {label}\n                </div>\n                {/* {isHovered && (<div\n                  style={{\n                    position: 'absolute',\n                    top: '-40px',\n                    left: '10px',\n                    backgroundColor: '#ffffff',\n                    padding: '2px',\n                    width: \"auto\",\n                    height: \"auto\",\n                    minWidth: \"130px\",\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n                    zIndex: \"100\",\n                    fontSize: \"8px\",\n                  }}\n                >\n                    <ul>\n                        {data.sourceNotebooks.map((nbId: string, index: string) => (<li key={index}>{nbId}</li>))}\n                    </ul>\n                </div>)} */}\n            </div>\n        </EdgeLabelRenderer>\n        </>\n  );\n}\n","import { CButton, CCard, CCardBody, CCollapse } from '@coreui/react';\nimport React, {useState} from 'react';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/default.css';\nimport { SrcNbAndCode } from './TreeUtils';\n\ninterface CodeHighlightProps {\n    language: string;\n    code: string;\n  }\n  \nconst CodeHighlight: React.FC<CodeHighlightProps> = ({ language, code }) => {\n    const highlightedCode = React.useMemo(() => {\n      return hljs.highlight(code, { language }).value;\n    }, [code, language]);\n  \n    return (\n      <pre>\n        <code dangerouslySetInnerHTML={{ __html: highlightedCode }} />\n      </pre>\n    );\n};\n\ninterface RecommendationCodeSnippetsProps {\n    variableCombination: string[];\n    srcNbAndCodeList: SrcNbAndCode[];\n}\n\n\nexport function RecommendationCodeSnippets({ variableCombination, srcNbAndCodeList }: RecommendationCodeSnippetsProps) {\n    const [visible, setVisible] = useState(false);\n    const [currentPage, setCurrentPage] = useState(0);\n    \n    const gotoPreviousPage = () => {\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 0));\n    };\n    const gotoNextPage = () => {\n        setCurrentPage((prevPage) => Math.min(prevPage + 1, srcNbAndCodeList.length - 1));\n      };\n\n    const getSourceCode = () => {\n        if (srcNbAndCodeList[currentPage] && srcNbAndCodeList[currentPage].sourceCode) {\n            return srcNbAndCodeList[currentPage].sourceCode.join(\"\\n\");\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    const getSourceNotebook = () => {\n        if (srcNbAndCodeList[currentPage] && srcNbAndCodeList[currentPage].sourceNotebook) {\n            return srcNbAndCodeList[currentPage].sourceNotebook;\n        }\n        else {\n            return \"\";\n        }\n    }\n    \n    const showButtonStyle = {\n        height: \"40px\",\n        width: \"450px\",\n    }\n    const cardBodyStyle = {\n        display: 'flex',\n        flexDirection: 'column' as 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#E1E1E1',\n        width: \"500px\"\n    };\n    const codeDivStyle = {\n        flex: \"1\",\n        height: \"300px\",\n        overflowY: \"scroll\" as \"scroll\",\n        width: \"100%\",\n        minHeight: \"100px\",\n        maxHeight: \"450px\",\n    };\n    const buttonDivStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: \"100%\",\n        margin: \"10px\",\n        marginTop: \"20px\",\n    };\n    const stepButtonStyle = {\n        height: \"30px\",\n        width: \"30px\",\n        backgroundColor: \"white\",\n        color: \"black\",\n        border: \"3px solid #959595\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    };\n    const pageNumberDivStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n    };\n    const variableCombinationDivStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        maxWidth: \"480\",\n        padding: \"10px\",\n    };\n    \n    return (\n        <div>\n            <CButton className=\"mb-3\" \n            color=\"warning\" \n            onClick={() => setVisible(!visible)} \n            aria-expanded={visible} \n            aria-controls=\"collapseCodeSnippets\"\n            style={showButtonStyle}>\n                Show code snippets of the selected recommendation\n            </CButton>\n            <div>\n                <CCollapse id=\"collapseCodeSnippets\" horizontal visible={visible}>\n                    <CCard>\n                        <CCardBody style={cardBodyStyle}>\n                            <div style={codeDivStyle}>\n                                <CodeHighlight language=\"python\" code={getSourceCode()} />\n                            </div>\n                            <div style={buttonDivStyle}>\n                                <CButton style={stepButtonStyle} onClick={gotoPreviousPage}>&laquo;</CButton>\n                                <span>Source Notebook: {getSourceNotebook()}.ipynb</span>\n                                <CButton style={stepButtonStyle} onClick={gotoNextPage}>&raquo;</CButton>\n                            </div>\n                            <div style={variableCombinationDivStyle}>\n                                <span style={{maxWidth: \"100%\"}}>Code snipptes for column combination: {JSON.stringify(variableCombination)}</span>\n                            </div>\n                            <div style={pageNumberDivStyle}>\n                                <span>{currentPage+1}/{srcNbAndCodeList.length}</span>\n                            </div>\n                        </CCardBody>\n                    </CCard>\n                </CCollapse>\n            </div>\n\n        </div>\n    );\n}","import { Node, Edge, Connection } from \"reactflow\";\nimport dagre from 'dagre';\n\nexport const getLayoutedElements = (nodes:Node[], edges:Edge[], direction='TB') => {\n    const dagreGraph = new dagre.graphlib.Graph();\n    const nodeWidth:number = 60;\n    const nodeHeight:number = 20;\n    const isHorizontal = direction === 'LR';\n\n    dagreGraph.setDefaultEdgeLabel(() => ({}));\n    dagreGraph.setGraph({ rankdir: direction, nodesep: 80});\n\n    // set the postiions to 0\n    nodes.forEach((node:Node) => {\n        return {...node, position: { x: 0, y: 0 } }\n    });\n\n    // edge cleanup to avoid orphan edges\n    const edgesAfterCleanUp = edges.filter((e) => nodes.some((n) => n.id === e.source) && nodes.some((n) => n.id === e.target));\n\n    // Add nodes and edges into dagreGraph\n    nodes.forEach((node:Node) => {\n        dagreGraph.setNode(node.id, { width: nodeWidth, height: nodeHeight });\n    });\n    edgesAfterCleanUp.forEach((edge:Edge) => {\n        dagreGraph.setEdge(edge.source, edge.target);\n    });\n\n    dagre.layout(dagreGraph);\n\n    nodes.forEach((node:any) => {\n        const nodeWithPosition = dagreGraph.node(node.id);\n        node.targetPosition = isHorizontal ? 'left' : 'top';\n        node.sourcePosition = isHorizontal ? 'right' : 'bottom';\n\n        // We are shifting the dagre node position (anchor=center center) to the top left\n        // so it matches the React Flow node anchor point (top left).\n        node.position = {\n            x: nodeWithPosition.x - nodeWidth / 2,\n            y: nodeWithPosition.y - nodeHeight / 2,\n        };\n\n        if (node.data.nodeType === 'insight') {\n            node.position.y = node.position.y + 100;\n        }\n\n        return node;\n    });\n    return { nodes: nodes, edges: edgesAfterCleanUp };\n};\n\n// function getEdgeLabel(sourceId: String, targetId: String, allEdges: Edge[]) {\n//     // Find the edge weight between sourceId and targetId\n//     const edge = allEdges.find((e) => e.source === sourceId && e.target === targetId);\n//     if (edge === undefined || edge.label === undefined) {\n//         return undefined;\n//     }\n//     return edge.label;\n// }\n\nfunction getNodeById(nodeId: string, allNodes: Node[]) {\n    const node = allNodes.find((n) => n.id === nodeId);\n    if (node === undefined) {\n        throw new Error(`[getNodeById] Node with id=${nodeId} is not found`);\n    }\n    return node;\n}\n\nfunction getSubtreeElements(node: Node, \n    curNodes: Node[], \n    allEdges: Edge[], \n    skipSubtreeOfEtc: boolean = true, \n    includeRootEdges: boolean = true) {\n    // Find all the nodes that belongs to the subtree whose root is node\n    // subtree does NOT include the node itself\n    const subtreeNodes:Node[] = [];\n    // const subtreeEdges:Edge[] = [];\n    const queue:Node[] = [node];\n    while (queue.length > 0) {\n        const currentNode: Node = queue.shift()!;\n        if (currentNode !== node) {\n            subtreeNodes.push(currentNode);\n            if (skipSubtreeOfEtc && currentNode.data.nodeType === 'etc') {\n                continue;\n            }\n        }\n        const children = curNodes.filter((n) => n.data.parent === currentNode.id);\n        children.forEach((child) => {\n            queue.push(child);\n        });\n    }\n    const subtreeEdgesExceptRoot = allEdges.filter((e) => subtreeNodes.some((sn) => sn.id === e.target) && subtreeNodes.some((sn) => sn.id === e.source)); \n    if (includeRootEdges) {\n        const rootEdges = allEdges.filter((e) => (e.source === node.id) && subtreeNodes.some((sn) => sn.id === e.target));\n        const subtreeEdges = subtreeEdgesExceptRoot.concat(rootEdges);\n        return { subtreeNodes, subtreeEdges };\n    }\n    const subtreeEdges = subtreeEdgesExceptRoot;\n    return { subtreeNodes, subtreeEdges };\n}\n\nexport function getInitialElements(allNodes: Node[], allEdges: Edge[]) {\n    // Find the root node\n    const rootNode = allNodes.find((n) => n.data.label === 'root');\n    if (rootNode === undefined) {\n        throw new Error('No root node found');\n    }\n    // Find all the nodes that belongs to the subtree whose root is rootNode\n    const {subtreeNodes: initialNodes, subtreeEdges: initialEdges} = getSubtreeElements(rootNode, allNodes, allEdges);\n    initialNodes.push(rootNode);\n    return { nodes: initialNodes, edges: initialEdges };\n}\n\nfunction expandAllNodes(allNodes: Node[], allEdges: Edge[]) {\n    const newNodes = allNodes.filter((n) => n.data.nodeType !== 'etc');\n        let edgesToRemove = allEdges.filter((e) => (e.target.startsWith('etc')));\n        // change the edge whose source is etc to its parent\n        const etcNodes = allNodes.filter((n) => n.data.nodeType === 'etc');\n        const newEdges = allEdges.map((e) => {\n            if (etcNodes.some((n) => n.id === e.source)) {\n                e.source = etcNodes.find((n) => n.id === e.source)!.data.parent!;\n            }\n            return e;\n        })\n    const newEdgesAfterCleanUp = newEdges.filter((e) => !edgesToRemove.some((et) => et.id === e.id));\n    const { nodes: layoutedNewNodes, edges: layoutedNewEdges } = getLayoutedElements(newNodes, newEdgesAfterCleanUp);\n    return { nodes: layoutedNewNodes, edges: layoutedNewEdges };\n}\n\nfunction expandEtcNode(selectedNode: Node|null, curNodes: Node[]|null, curEdges: Edge[]|null, allNodes: Node[], allEdges: Edge[]) {\n    if (selectedNode === null || curNodes === null || curEdges === null || selectedNode.data.nodeType !== 'etc') {\n        console.log(`[TreeUtils] Invalid input: selectedNode=${selectedNode}, nodeType=${selectedNode?.data.nodeType}}`);\n        return { nodes: curNodes, edges: curEdges };\n    }\n    \n    const {subtreeNodes: subtreeNodes, subtreeEdges: subtreeEdges} = getSubtreeElements(selectedNode, allNodes, allEdges, true, false);\n    const newNodes = curNodes.concat(subtreeNodes).filter((n) => n.id !== selectedNode.id);\n    // const newEdges = curEdges.concat(subtreeEdges).map((e) => {\n    //     if (e.source === selectedNode.id) {\n    //         e.source = selectedNode.data.parent;\n    //     }\n    //     return e;\n    // }).filter((e) => e.target !== selectedNode.id);\n    const directChildrenOfEtc = allNodes.filter((n) => n.data.parent === selectedNode.id);\n    const parentNodeId = selectedNode.data.parent;\n    const parentDirectChildrenEdges: Edge[] = directChildrenOfEtc.map((child) => {\n        return {\n            id: `${parentNodeId}-${child.id}`,\n            source: parentNodeId,\n            target: child.id,\n        };\n    })\n    const parentEtcEdge = curEdges.find((e) => e.source === parentNodeId && e.target === selectedNode.id);\n    // newEdges = curEdges - parentEtcEdge + subtreeEdges + parentDirectChildrenEdges\n    const newEdges = curEdges.filter((e) => e.id !== parentEtcEdge!.id).concat(subtreeEdges).concat(parentDirectChildrenEdges);\n    console.log(`[expandEtcNode] After expandEtcNode:\\nedges=${JSON.stringify(newEdges)}\\nallEdges=${JSON.stringify(allEdges)}`);\n\n    return { nodes: newNodes, edges: newEdges};\n}\n\nfunction expandSubtree(selectedNode: Node|null, curNodes: Node[]|null, curEdges: Edge[]|null, allNodes: Node[], allEdges: Edge[]) {\n    if (selectedNode === null || curNodes === null || curEdges === null) {\n        console.log(`[TreeUtils] Invalid input: selectedNode=${selectedNode}`);\n        return { nodes: curNodes, edges: curEdges };\n    }\n    \n    if (selectedNode.data.nodeType === 'etc') {\n        return expandEtcNode(selectedNode, curNodes, curEdges, allNodes, allEdges);    \n    }\n    const {subtreeNodes: subtreeNodes, subtreeEdges: subtreeEdges} = getSubtreeElements(selectedNode, allNodes, allEdges);\n    const newNodes = curNodes.concat(subtreeNodes);\n    const newEdges = curEdges.concat(subtreeEdges);\n    const newNodesAfterLabelChange = newNodes.map((n) => {\n        if (n.id === selectedNode.id && n.data.label.endsWith(\" (+)\")) {\n            const curLabel = n.data.label;\n            n.data = {...n.data, label: curLabel.substring(0, curLabel.length - 4)} \n        };\n        return n;\n        }\n    );\n    return { nodes: newNodesAfterLabelChange, edges: newEdges };\n}\n\n\nfunction collapseBackEtcNode(parentNode: Node|null, curNodes: Node[]|null, curEdges: Edge[]|null, allNodes: Node[], allEdges: Edge[]) {\n    if (parentNode === null || curNodes === null || curEdges === null) {\n        console.log(`[TreeUtils] Invalid input: selectedNode=${parentNode}`);\n        return { nodes: curNodes, edges: curEdges };\n    }\n    const etcNode = allNodes.find((n) => n.data.parent === parentNode.id && n.data.nodeType === 'etc');\n    if (! etcNode) {\n        console.log('No etc node found in children so cannot do collapseNonTop');\n        return {nodes: curNodes, edges: curEdges};\n    }\n    const {subtreeNodes: etcSubtreeNodes, subtreeEdges: etcSubtreeEdges} = getSubtreeElements(etcNode!, allNodes, allEdges, false, false);\n    const newNodes = curNodes.filter((n) => !etcSubtreeNodes.some((sn) => sn.id === n.id)).concat(etcNode); // remove all the nodes in subtree\n    const parentChildrenEdges = curEdges.filter((e) => e.source === parentNode.id && getNodeById(e.target, allNodes).data.parent === etcNode.id);\n    const etcEdge = allEdges.filter((e) => e.target === etcNode.id && e.source === parentNode.id);\n    // newEdges = curEdges - etcSubtreeEdges (without root edges) - parentChildrenEdges + etcNodeEdge\n    const newEdges = curEdges.filter((e) => !etcSubtreeEdges.some((se) => se.id === e.id)).filter((e) => !parentChildrenEdges.some((pce) => pce.id === e.id)).concat(etcEdge);\n    // add the etcNode to newNodes\n    console.log(`[expandEtcNode] After expandEtcNode:\\nedges=${JSON.stringify(newEdges)}\\nallEdges=${JSON.stringify(allEdges)}`);\n    return { nodes: newNodes, edges: newEdges };\n}\n\nfunction collapseSubtree(selectedNode: Node|null, curNodes: Node[]|null, curEdges: Edge[]|null, allNodes: Node[], allEdges: Edge[]) {\n    if (selectedNode === null || curNodes === null || curEdges === null) {\n        console.log(`[TreeUtils] Invalid input: selectedNode=${selectedNode}`);\n        return { nodes: curNodes, edges: curEdges };\n    }\n    const { nodes: nodesAfterCollapseEtcBack, edges: edgesAfterCollapseEtcBack } = collapseBackEtcNode(selectedNode, curNodes, curEdges, allNodes, allEdges);\n    const {subtreeNodes: subtreeNodes, subtreeEdges: subtreeEdges} = getSubtreeElements(selectedNode, allNodes, allEdges, false);\n    const newNodes = nodesAfterCollapseEtcBack!.filter((n) => !subtreeNodes.some((sn) => sn.id === n.id)); // remove all the nodes in subtree\n    console.log(`[collapseSubtree] prevNodes length=${curNodes.length}, newNodes length=${newNodes.length}`);\n    const labelWhenCollapse = selectedNode.data.rawData + ' (+)';\n    const newNodesAfterLabelChange = newNodes.map((n) => {\n        if (n.id === selectedNode.id) {\n            n.data = {...n.data, label: labelWhenCollapse} \n        };\n        return n;\n        }\n    );\n    const newEdges = edgesAfterCollapseEtcBack!.filter((e) => !subtreeEdges.some((se) => se.id === e.id)); // remove all the edges in subtree\n    const newEdgesAfterCleanUp = newEdges.filter((e) => !subtreeNodes.some((sn) => sn.id === e.source)); // remove all edges that has source in subtree\n    return { nodes: newNodesAfterLabelChange, edges: newEdgesAfterCleanUp };\n}\n\n\nfunction getNewNodesAndEdges(command:string, selectedNode: Node|null, curNodes: Node[]|null, curEdges: Edge[]|null, allNodes: Node[]|null, allEdges: Edge[]|null) {\n    console.log(`[getNewNodesAndEdges] command=${command}, selectedNode=${selectedNode?.data.label}`);\n    if (allNodes === null || allEdges === null) {\n        return { nodes: curNodes, edges: curEdges};\n    }\n    switch (command) {\n        case 'GetInitial': {\n            return getInitialElements(allNodes, allEdges);\n        }\n        case 'ExpandAllNodes': {\n            return expandAllNodes(allNodes, allEdges);\n        }\n        case 'CollapseBackToInitial': {\n            return getInitialElements(allNodes, allEdges);\n        }\n        case 'ExpandEtcNode': {\n            return expandEtcNode(selectedNode, curNodes, curEdges, allNodes, allEdges);\n        }\n        case 'ExpandSubtree': {\n            return expandSubtree(selectedNode, curNodes, curEdges, allNodes, allEdges);\n        }\n        case 'CollapseSubtree': {\n            return collapseSubtree(selectedNode, curNodes, curEdges, allNodes, allEdges);\n        }\n        case 'CollapseNonTop': {\n            return collapseBackEtcNode(selectedNode, curNodes, curEdges, allNodes, allEdges);\n        }\n        default: {\n            console.log(`[getNewNodesAndEdges] invalid command: ${command}`);\n            return { nodes: curNodes, edges: curEdges}\n        }\n    }\n}\n\nexport interface EdgeOperation {\n    operation: string, // add / remove\n    edge: Edge\n}\n\nexport function applyEdgeOperations(edgeOperations: EdgeOperation[], curNodes: Node[]|null, curEdges: Edge[]|null) {\n    if (curEdges === null || curNodes === null) {\n        console.log('[applyEdgeOperations] curEdges or curNodes is null');\n        return curEdges;\n    }\n    for(let edgeOp of edgeOperations) {\n        const sourceNode = curNodes.find((n) => n.id === edgeOp.edge.source);\n        const targetNode = curNodes.find((n) => n.id === edgeOp.edge.target);\n        if (sourceNode === undefined || targetNode === undefined) {\n            continue;\n        }\n        if(edgeOp.operation === 'add') {\n            curEdges.push(edgeOp.edge);\n        }\n        else if (edgeOp.operation === 'remove') {\n            curEdges = curEdges.filter((e) => e.id !== edgeOp.edge.id);\n        }\n        else {\n            console.log(`[applyEdgeOperations] invalid operation: ${edgeOp.operation}`);\n        }\n    }\n    return curEdges;\n}\n\n\nexport function translateTreeUtilCommand(command:string,\n    selectedNode: Node|null,\n    curNodes: Node[]|null,\n    curEdges: Edge[]|null,\n    allNodes: Node[]|null,\n    allEdges: Edge[]|null,\n    edgeOperations: EdgeOperation[]) {\n    const { nodes: newNodes, edges: newEdges } = getNewNodesAndEdges(command, selectedNode, curNodes, curEdges, allNodes, allEdges);\n    const updatedEdges = applyEdgeOperations(edgeOperations, newNodes, newEdges);\n    const { nodes:layoutedNodes, edges: layoutedEdges} = getLayoutedElements(newNodes!, updatedEdges!);\n    return { nodes: layoutedNodes, edges: layoutedEdges };\n}\n\nfunction getTargetNode(selectedEdge: Edge, curNodes: Node[]|null) {\n    if (curNodes === null || selectedEdge === null || selectedEdge === undefined) {\n        return null;\n    }  \n    // the target node must have at least 1 edge connected to it\n    const targetNode = curNodes.find((n) => n.id === selectedEdge.target);\n    return targetNode;\n}\n\nexport function isEdgeRemoveable(selectedEdge: Edge, curNodes: Node[]|null, curEdges: Edge[]|null) {\n    if (curEdges === null || curNodes === null || !selectedEdge) {\n        console.log('[removeEdge] curEdges or curNodes or selectedEdge is null');\n    }\n    const targetNode = getTargetNode(selectedEdge, curNodes);\n    if (targetNode === undefined || targetNode === null) {\n        return true;\n    }\n    if (targetNode.data.nodeType !== 'insight') {\n        return false;\n    }\n    const edgesConnectedToTarget = curEdges!.filter((e) => e.target === targetNode.id);\n    return edgesConnectedToTarget.length > 1;\n}\n\nexport function isEdgeConnectable(connection: Connection, curNodes: Node[] | null) {\n    console.log(`[isEdgeConnectable] newEdge.target_id=${connection.target}`);\n    if (curNodes === null || !connection) {\n        console.log('[removeEdge] curEdges or curNodes or selectedEdge is null');\n        return false;\n    }\n    // print the ids of curNodes as a array\n    console.log(`[isEdgeConnectable] curNodes=${JSON.stringify(curNodes)}`);\n    const targetNode = curNodes!.find((n) => n.id === connection.target);\n    if (targetNode === undefined || targetNode === null) {\n        console.log(`[isEdgeConnectable] the target of newEdge is not found`);\n        return false;\n    }\n    console.log(`[isEdgeConnectable] targetNode.data.nodeType=${targetNode.data.nodeType}`)\n    return targetNode.data.nodeType === 'insight';\n\n}\n\nexport function removeEdge(selectedEdge: Edge, curNodes: Node[]|null, curEdges: Edge[]|null) {\n    if (curEdges === null || curNodes === null) {\n        console.log('[removeEdge] curEdges or curNodes is null');\n        return {nodes: curNodes, edges: curEdges};\n    }    \n    const newEdges = curEdges!.filter((e) => e.id !== selectedEdge.id);\n    const { nodes:layoutedNodes, edges: layoutedEdges} = getLayoutedElements(curNodes, newEdges);\n    return { nodes: layoutedNodes, edges: layoutedEdges };\n}\n\n\nexport function isEdgeUpdatable(selectedEdge: Edge, curNodes: Node[]|null) {\n    if (selectedEdge === undefined || selectedEdge === null || curNodes === null) {\n        console.log('[isEdgeUpdatable] selectedEdge or curNodes is null');\n        return false;\n    }\n    const targetNode = curNodes.find((n) => n.id === selectedEdge.target);\n    console.log(`[isEdgeUpdatable] targetNode=${targetNode}`);\n    if (targetNode === undefined) {\n        console.log(`[isEdgeUpdatable] the target of selectedEdge is not found`);\n        return false;\n    }\n    console.log(`[isEdgeUpdatable] targetNode.data.nodeType=${targetNode.data.nodeType}`);\n    return targetNode.data.nodeType === 'insight';\n}\n\nexport function getPathVariableCombination(selectedNode: Node|null, allNodes: Node[]|null) {\n    // get the column combination of the path from root to leafNode\n    if (allNodes === null || selectedNode === null) {\n        return [];\n    }\n    if (selectedNode.data.nodeType !== 'recommended') {\n        console.log(`[getPathVariableCombination] selectedNode is not a recommended node`)\n        return [];\n    }\n    console.log(`[getPathVariableCombination] selectedNode=${selectedNode}`);\n    const pathVariables = [];\n    const validNodeTypes = ['raw', 'implicit', 'recommended'];\n    let currentNode = selectedNode;\n    // if the selectedNode is not a leaf node, find its child until it's a leaf node\n    while (currentNode.data.children !== undefined && currentNode.data.children.length > 0) {\n        const childNode = getNodeById(currentNode.data.children[0], allNodes);\n        console.log(`[getPathVariableCombination] childNode=${JSON.stringify(childNode)}`);\n        if (childNode.data.nodeType !== 'recommended') {\n           break;\n        }\n        currentNode = childNode;\n    }\n    while (currentNode.data.parent !== undefined) {\n        if (validNodeTypes.includes(currentNode.data.nodeType)) {\n            pathVariables.push(currentNode.data.rawData);\n        }\n        const parent = getNodeById(currentNode.data.parent, allNodes);\n        currentNode = parent;\n    }\n    // console.log(`[getPathVariableCombination] get pathVariables=${pathVariables}`);\n    pathVariables.reverse();\n    return pathVariables;\n}\n\nexport interface SrcNbAndCode {\n    sourceNotebook: string;\n    sourceCode: string[];\n}","import {\n  ILayoutRestorer,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport {\n  ICommandPalette, MainAreaWidget,\n//   MainAreaWidget,\n//   WidgetTracker\n} from '@jupyterlab/apputils';\nimport { ITranslator } from '@jupyterlab/translation';\n// import { reactIcon } from '@jupyterlab/ui-components';\n// import { FlowWidget } from './ReactFlow';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { TangerinePanel } from './panel';\nimport { TangerineRegistry } from './registry';\nimport { Menu } from '@lumino/widgets';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { KnowledgeGraphWidget } from './KnowledgeGraph';\n\n/**\n * The command IDs used by the react-widget plugin.\n */\nnamespace CommandIDs {\n//   export const react_counter = 'create-react-counter-widget';\n  export const tangerine = 'create-tangerine-widget'\n  export const knowledgeGraph = 'create-knowledge-graph-widget'\n}\n\n\n/**\n* Activate the NB Viz widget extension.\n*/\nfunction activate(\n    app: JupyterFrontEnd, \n    palette: ICommandPalette, \n    mainMenu: IMainMenu,\n    translator: ITranslator,\n    notebookTracker: INotebookTracker,\n    restorer: ILayoutRestorer | null) {\n    console.log('JupyterLab extension NB Viz (name placeholder) is activated!');\n  \n    const registry = new TangerineRegistry();\n    app.docRegistry.addWidgetExtension('Notebook', registry);\n\n    async function createPanel() {\n        // create a Tangerine panel\n        console.log('created Tangerine panel');\n        console.log(`Now registry.notebook=${registry.notebook}`);\n\n        const panel = new TangerinePanel(notebookTracker, translator);\n        app.shell.add(panel, 'main');\n        registry.panel = panel;\n        registry.panel.widget.notebookPanel = registry.notebook;\n        \n        console.log('Set notebookPanel for FlowWidget');\n        console.log(registry.panel.widget.notebookPanel);\n        \n        return panel;\n    }\n\n    async function createKnowledgeGraph() {\n        const content = new KnowledgeGraphWidget();\n        const widget = new MainAreaWidget({ content });\n        widget.title.label = \"Knowledge Graph\";\n        if (!widget.isAttached) {\n           app.shell.add(widget, 'main'); \n        }\n    }\n\n    const trans = translator.load('jupyterlab');\n    app.commands.addCommand(CommandIDs.tangerine, {\n            label: trans.__(`Tracking tree`),\n            caption: trans.__(`Tracking tree`),\n            execute: createPanel\n        }\n    );\n    palette.addItem({ command: CommandIDs.tangerine, category: 'Tutorial' });\n\n    app.commands.addCommand(CommandIDs.knowledgeGraph, {\n        label: trans.__(`Knowledge Graph`),\n        caption: trans.__(`Knowledge Graph`),\n        execute: createKnowledgeGraph\n    }\n    );\n    palette.addItem({ command: CommandIDs.knowledgeGraph, category: 'Tutorial' });\n\n    // add menu tab\n    const tangerineMenu = new Menu({ commands: app.commands });\n    tangerineMenu.title.label = trans.__(\"Tangerine\");\n    mainMenu.addMenu(tangerineMenu, {rank: 280});\n    tangerineMenu.addItem({ command: CommandIDs.tangerine });\n    tangerineMenu.addItem({ command: CommandIDs.knowledgeGraph });\n\n    notebookTracker.currentChanged.connect((tracker, panel) => {\n        console.log('NotebookTracker Widget changed');\n        if (registry.panel) {\n            registry.panel.widget.notebookPanel = panel;\n            registry.panel.widget.notebookTracker = tracker;\n        }\n        else {\n            console.log('registry.panel is null');\n        }\n\n    });\n}\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n    id: 'jupyter-nb-viz:plugin',\n    autoStart: true,\n    requires: [ICommandPalette, IMainMenu, ITranslator, INotebookTracker], // lists of tokens corresponding to services other plugins provide.\n    optional: [ILayoutRestorer], // lists of tokens corresponding to services other plugins provide.\n    activate: activate\n};\n\nexport default plugin;\n","import { StackedPanel } from '@lumino/widgets';\nimport { ITranslator, nullTranslator, TranslationBundle } from '@jupyterlab/translation';\nimport { FlowWidget } from './ReactFlow';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\nexport class TangerinePanel extends StackedPanel {\n    private _translator: ITranslator;\n    private _trans: TranslationBundle;\n    private _widget: FlowWidget;\n    private _currentNotebook: NotebookPanel | null = null;\n    private _notebookTracker: INotebookTracker | null = null;\n\n    get widget() {\n        return this._widget;\n    }\n\n    set widget(widget:FlowWidget) {\n        this._widget = widget;\n    }\n\n    get currentNotebook() {\n        return this._currentNotebook;\n    }\n\n    set currentNotebook(notebook: NotebookPanel | null) {\n        this._currentNotebook = notebook;\n    }\n\n\n    constructor(notebookTracker: INotebookTracker, translator?: ITranslator) {\n        super();\n        this._translator = translator || nullTranslator;\n        this._trans = this._translator.load('jupyterlab');\n        this.id = 'Tangerine'\n        this.title.label = this._trans.__(`Tracking Tree`);\n        this.title.closable = true;\n        this._notebookTracker = notebookTracker;\n        \n        this._widget = new FlowWidget(this._currentNotebook, this._notebookTracker);\n        this.addWidget(this._widget);\n    }\n}","import { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { NotebookPanel, INotebookModel} from '@jupyterlab/notebook';\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\nimport { TangerinePanel } from './panel';\n  \n\nexport class TangerineRegistry implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>{\n    private _panel: TangerinePanel | null = null;\n    private _notebook: NotebookPanel | null = null;\n\n    get panel() {\n        return this._panel;\n    }\n\n    set panel(panel: TangerinePanel | null) {\n        this._panel = panel;\n    }\n\n    get notebook() {\n        return this._notebook;\n    }\n\n    createNew(panel: NotebookPanel, context: DocumentRegistry.IContext<INotebookModel>): void | IDisposable {\n        Promise.all([panel.revealed, panel.sessionContext.ready]).then(() => {\n            this._notebook = panel;\n            // if(this._panel) {\n            //    this._panel.currentNotebook = panel; \n            // }\n            // console.log(`Notebook: ${this._notebook}`);\n            // console.log(`Notebook model: ${this._notebook.model}`);\n        });\n\n        return new DisposableDelegate(() => {});\n    }\n}","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./node.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}